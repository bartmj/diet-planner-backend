{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport { saveFood } from \"../api/apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  proteinPer100g: 27,\n  caloriesPer100g: 239\n}, {\n  id: 2,\n  value: 'eggs',\n  proteinPer100g: 13,\n  caloriesPer100g: 155.1\n}, {\n  id: 3,\n  value: 'cheese piątnica semi-fat',\n  proteinPer100g: 16,\n  caloriesPer100g: 485\n}, {\n  id: 4,\n  value: 'peanut butter',\n  proteinPer100g: 23.78,\n  caloriesPer100g: 642\n}, {\n  id: 5,\n  value: 'oats',\n  proteinPer100g: 14,\n  caloriesPer100g: 418\n}, {\n  id: 6,\n  value: 'walnut',\n  proteinPer100g: 15,\n  caloriesPer100g: 654.4\n}, {\n  id: 7,\n  value: 'dark bread',\n  proteinPer100g: 8.5,\n  caloriesPer100g: 218\n}, {\n  id: 8,\n  value: 'protein bar Olymp 64 g',\n  proteinPer100g: 31,\n  caloriesPer100g: 369\n}, {\n  id: 9,\n  value: 'WPI 90 Olymp',\n  proteinPer100g: 90,\n  caloriesPer100g: 373\n}, {\n  id: 10,\n  value: 'wheat noodles, cooked',\n  proteinPer100g: 5.15,\n  caloriesPer100g: 131\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.proteinPer100g / 100;\n      let caloriesPerFood = this.state.weight * this.state.kcalPer100g / 100;\n      let fatsPerFood = this.state.weight * this.state.fatsPer100g / 100;\n      this.setState({\n        foods: [...this.state.foods, {\n          id: this.state.id + 1,\n          name: this.state.name,\n          totalProtein: proteinPerFood,\n          totalCalories: caloriesPerFood,\n          totalFats: fatsPerFood\n        }],\n        name: '',\n        // id: this.state.id + 1,\n\n        totalProtein: proteinPerFood,\n        totalKcal: caloriesPerFood,\n        totalFats: fatsPerFood\n      });\n      saveFood();\n    };\n    this.saveFood = () => {\n      apiCalls.saveFood(this.state.name, this.state.weight, this.state.proteinPer100g, this.state.fatsPer100g, this.state.kcalPer100g, this.state.proteinTotal, this.state.fatsTotal, this.state.kcalTotal).then(response => {\n        console.log(response.data);\n      });\n    };\n    this.removeObject = val => {\n      let obj = this.state.foods.find(o => o.id === val);\n      this.setState({\n        foods: this.state.foods.filter(obj => {\n          return obj.id !== val;\n        }),\n        totalProtein: this.state.totalProtein - obj.protein,\n        totalKcal: this.state.totalKcal - obj.calories\n      });\n    };\n    this.state = {\n      id: 0,\n      name: '',\n      weight: 0,\n      proteinPer100g: 0,\n      fatsPer100g: 0,\n      kcalPer100g: 0,\n      totalProtein: 0,\n      totalFats: 0,\n      totalKcal: 0,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayKcal: 0,\n      foods: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    console.log(obj);\n    if (obj) {\n      this.setState({\n        // totalProtein: 12,\n        // totalCalories: 12\n        totalProtein: obj.proteinPer100g * this.state.weight / 100,\n        totalCalories: obj.kcalPer100g * this.state.weight\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.totalProtein * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"food:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"productName\",\n        children: options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"weight (grams):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"protein/100g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"protein\",\n        value: this.state.proteinPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"calories/100g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"calories\",\n        value: this.state.caloriesPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"food: \", food.name, \", protein: \", Math.round(food.totalProtein * 100) / 100, \"g, calories: \", Math.round(food.totalCalories * 100) / 100, \"kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removeObject(food.id),\n            type: \"button\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","apiCalls","saveFood","options","id","value","proteinPer100g","caloriesPer100g","UserPanel","Component","constructor","props","addObjectToArray","e","preventDefault","proteinPerFood","state","weight","caloriesPerFood","kcalPer100g","fatsPerFood","fatsPer100g","setState","foods","name","totalProtein","totalCalories","totalFats","totalKcal","proteinTotal","fatsTotal","kcalTotal","then","response","console","log","data","removeObject","val","obj","find","o","filter","protein","calories","totalDayProtein","totalDayFats","totalDayKcal","handleChange","bind","handleNameChange","target","n","toLowerCase","render","Math","round","map","option","food"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport {saveFood} from \"../api/apiCalls\";\n\nconst options = [\n    { id: 1, value: 'chicken', proteinPer100g: 27, caloriesPer100g: 239 },\n    { id: 2, value: 'eggs', proteinPer100g: 13, caloriesPer100g: 155.1 },\n    { id: 3, value: 'cheese piątnica semi-fat', proteinPer100g: 16, caloriesPer100g: 485 },\n    { id: 4, value: 'peanut butter', proteinPer100g: 23.78, caloriesPer100g: 642 },\n    { id: 5, value: 'oats', proteinPer100g: 14, caloriesPer100g: 418 },\n    { id: 6, value: 'walnut', proteinPer100g: 15, caloriesPer100g: 654.4 },\n    { id: 7, value: 'dark bread', proteinPer100g: 8.5, caloriesPer100g: 218 },\n    { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, caloriesPer100g: 369 },\n    { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, caloriesPer100g: 373 },\n    { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, caloriesPer100g: 131 }\n]\n\nclass UserPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            name: '',\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n            totalProtein: 0,\n            totalFats: 0,\n            totalKcal: 0,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayKcal: 0,\n            foods: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let caloriesPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n        this.setState({\n            foods: [\n                ...this.state.foods,\n                { id: this.state.id + 1, name: this.state.name, totalProtein: proteinPerFood, totalCalories: caloriesPerFood, totalFats: fatsPerFood }\n            ],\n            name: '',\n            // id: this.state.id + 1,\n\n            totalProtein: proteinPerFood,\n            totalKcal: caloriesPerFood,\n            totalFats: fatsPerFood,\n        })\n\n        saveFood();\n    };\n\n    saveFood = () => {\n        apiCalls.saveFood(\n            this.state.name,\n            this.state.weight,\n            this.state.proteinPer100g,\n            this.state.fatsPer100g,\n            this.state.kcalPer100g,\n            this.state.proteinTotal,\n            this.state.fatsTotal,\n            this.state.kcalTotal\n\n        ).then(response => {\n            console.log(response.data)\n        })\n    };\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                return obj.id !== val;\n            }),\n            totalProtein: this.state.totalProtein - obj.protein,\n            totalKcal: this.state.totalKcal - obj.calories\n\n        })\n    }\n\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        console.log(obj)\n        if (obj) {\n            this.setState({\n                // totalProtein: 12,\n                // totalCalories: 12\n                totalProtein: (obj.proteinPer100g * this.state.weight)/100,\n                totalCalories: (obj.kcalPer100g * this.state.weight)\n            });\n        }\n    }\n\n    render() {\n        return <>\n            <h3>Total calories {Math.round(this.state.totalKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.totalProtein * 100) / 100}g</h3>\n\n            <label>food:</label>\n            <input\n                id=\"multiselect\"\n                type=\"text\"\n                name=\"\"\n                list=\"productName\"\n                onChange={this.handleNameChange}\n                value={this.state.name} />\n            <datalist id=\"productName\">\n                {options.map(option => {\n                    return (\n                        <option key={option.id} value={option.value}>{option.value}</option>\n                    );\n                })}\n            </datalist>\n            <label>weight (grams):</label>\n            <input\n                name=\"weight\"\n                value={this.state.weight}\n                onChange={this.handleChange} />\n            <label>protein/100g:</label>\n            <input\n                name=\"protein\"\n                value={this.state.proteinPer100g}\n                onChange={this.handleChange} />\n            <label>calories/100g</label>\n            <input\n                name=\"calories\"\n                value={this.state.caloriesPer100g}\n                onChange={this.handleChange} />\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <p>food: {food.name}, protein: {Math.round(food.totalProtein * 100) / 100}g, calories: {Math.round(food.totalCalories * 100) / 100}kcal</p>\n                        <button\n                            onClick={() => this.removeObject(food.id)}\n                            type=\"button\">x</button>\n                        <hr />\n                    </div>\n                );\n            })}\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n        </>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}