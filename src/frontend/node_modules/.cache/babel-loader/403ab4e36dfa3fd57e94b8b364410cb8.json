{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  proteinPer100g: 27,\n  kcalPer100g: 239,\n  fatsPer100g: 1\n}, {\n  id: 2,\n  value: 'eggs',\n  proteinPer100g: 13,\n  kcalPer100g: 155.1,\n  fatsPer100g: 1\n}, {\n  id: 3,\n  value: 'cheese piÄ…tnica semi-fat',\n  proteinPer100g: 16,\n  kcalPer100g: 485,\n  fatsPer100g: 1\n}, {\n  id: 4,\n  value: 'peanut butter',\n  proteinPer100g: 23.78,\n  kcalPer100g: 642,\n  fatsPer100g: 1\n}, {\n  id: 5,\n  value: 'oats',\n  proteinPer100g: 14,\n  kcalPer100g: 418,\n  fatsPer100g: 1\n}, {\n  id: 6,\n  value: 'walnut',\n  proteinPer100g: 15,\n  kcalPer100g: 654.4,\n  fatsPer100g: 1\n}, {\n  id: 7,\n  value: 'dark bread',\n  proteinPer100g: 8.5,\n  kcalPer100g: 218,\n  fatsPer100g: 1\n}, {\n  id: 8,\n  value: 'protein bar Olymp 64 g',\n  proteinPer100g: 31,\n  kcalPer100g: 369,\n  fatsPer100g: 1\n}, {\n  id: 9,\n  value: 'WPI 90 Olymp',\n  proteinPer100g: 90,\n  kcalPer100g: 373,\n  fatsPer100g: 1\n}, {\n  id: 10,\n  value: 'wheat noodles, cooked',\n  proteinPer100g: 5.15,\n  kcalPer100g: 131,\n  fatsPer100g: 1\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.proteinPer100g / 100;\n      let kcalPerFood = this.state.weight * this.state.kcalPer100g / 100;\n      let fatsPerFood = this.state.weight * this.state.fatsPer100g / 100;\n      let dtoObj = {\n        id: null,\n        name: this.state.name,\n        weight: this.state.weight,\n        proteinPer100g: this.state.proteinPer100g,\n        fatsPer100g: this.state.fatsPer100g,\n        kcalPer100g: this.state.kcalPer100g,\n        proteinTotal: proteinPerFood,\n        fatsTotal: fatsPerFood,\n        kcalTotal: kcalPerFood,\n        userId: store.getState().auth.user.id,\n        ifFavourite: this.state.ifFavourite\n      };\n      apiCalls.saveFood(dtoObj).then(response => {\n        let idFromDb = response.data;\n        this.setState({\n          foods: [...this.state.foods, {\n            id: idFromDb,\n            name: this.state.name,\n            proteinTotal: proteinPerFood,\n            kcalTotal: kcalPerFood,\n            totalFats: fatsPerFood\n          }],\n          name: '',\n          weight: 0,\n          proteinPer100g: 0,\n          fatsPer100g: 0,\n          kcalPer100g: 0,\n          totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n          totalDayFats: this.state.totalDayFats + fatsPerFood,\n          totalDayKcal: this.state.totalDayKcal + kcalPerFood\n        });\n      });\n    };\n    this.removeObject = val => {\n      let obj = this.state.foods.find(o => o.id === val);\n      this.setState({\n        foods: this.state.foods.filter(obj => {\n          return obj.id !== val;\n        }),\n        totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n        totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n      });\n      apiCalls.remove(val);\n    };\n    this.loadFoods = () => {\n      apiCalls.getAll().then(response => {\n        this.setState({\n          foods: response.data\n        });\n        let totalDayProtein = 0,\n          totalDayFats = 0,\n          totalDayKcal = 0;\n        for (const element of response.data) {\n          totalDayProtein = totalDayProtein + element.proteinTotal;\n          totalDayFats = totalDayFats + element.fatsTotal;\n          totalDayKcal = totalDayKcal + element.kcalTotal;\n        }\n        this.setState({\n          totalDayProtein: totalDayProtein,\n          totalDayFats: totalDayFats,\n          totalDayKcal: totalDayKcal\n        });\n      });\n    };\n    this.state = {\n      name: '',\n      weight: 0,\n      proteinPer100g: 0,\n      fatsPer100g: 0,\n      kcalPer100g: 0,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayKcal: 0,\n      foods: [],\n      ifFavourite: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n  }\n  componentDidMount() {\n    this.loadFoods();\n    console.log();\n  }\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    if (obj) {\n      this.setState({\n        proteinPer100g: obj.proteinPer100g,\n        kcalPer100g: obj.kcalPer100g,\n        fatsPer100g: obj.fatsPer100g\n      });\n    }\n  }\n  handleCheckBoxChange() {\n    let bool = this.state.ifFavourite === false;\n    this.setState({\n      ifFavourite: bool\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Macro calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalDayKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.totalDayProtein * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"food:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"multiselect\",\n          type: \"text\",\n          name: \"\",\n          list: \"productName\",\n          onChange: this.handleNameChange,\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"productName\",\n          children: options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.value\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"weight (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"weight\",\n          value: this.state.weight,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"protein/100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"proteinPer100g\",\n          value: this.state.proteinPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"fats/100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"fatsPer100g\",\n          value: this.state.fatsPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"calories/100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"kcalPer100g\",\n          value: this.state.kcalPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"ifFavourite\",\n          name: \"ifFavourite\",\n          value: \"\",\n          onChange: this.handleCheckBoxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ifFavourite\",\n          children: \"Add to favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-1-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"food: \", food.name, \", protein: \", Math.round(food.proteinTotal * 100) / 100, \"g, calories: \", Math.round(food.kcalTotal * 100) / 100, \"kcal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.removeObject(food.id),\n              type: \"button\",\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","apiCalls","store","options","id","value","proteinPer100g","kcalPer100g","fatsPer100g","UserPanel","Component","constructor","props","state","getState","addObjectToArray","e","preventDefault","proteinPerFood","weight","kcalPerFood","fatsPerFood","dtoObj","name","proteinTotal","fatsTotal","kcalTotal","userId","auth","user","ifFavourite","saveFood","then","response","idFromDb","data","setState","foods","totalFats","totalDayProtein","totalDayFats","totalDayKcal","removeObject","val","obj","find","o","filter","remove","loadFoods","getAll","element","handleChange","bind","handleNameChange","handleCheckBoxChange","componentDidMount","console","log","target","n","toLowerCase","bool","render","Math","round","map","option","food"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\n\nconst options = [\n    { id: 1, value: 'chicken', proteinPer100g: 27, kcalPer100g: 239, fatsPer100g: 1 },\n    { id: 2, value: 'eggs', proteinPer100g: 13, kcalPer100g: 155.1, fatsPer100g: 1 },\n    { id: 3, value: 'cheese piÄ…tnica semi-fat', proteinPer100g: 16, kcalPer100g: 485, fatsPer100g: 1 },\n    { id: 4, value: 'peanut butter', proteinPer100g: 23.78, kcalPer100g: 642, fatsPer100g: 1 },\n    { id: 5, value: 'oats', proteinPer100g: 14, kcalPer100g: 418, fatsPer100g: 1 },\n    { id: 6, value: 'walnut', proteinPer100g: 15, kcalPer100g: 654.4, fatsPer100g: 1 },\n    { id: 7, value: 'dark bread', proteinPer100g: 8.5, kcalPer100g: 218, fatsPer100g: 1 },\n    { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, kcalPer100g: 369, fatsPer100g: 1 },\n    { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, kcalPer100g: 373, fatsPer100g: 1 },\n    { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, kcalPer100g: 131, fatsPer100g: 1 }\n]\n\nclass UserPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayKcal: 0,\n            foods: [],\n            ifFavourite: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n\n    }\n\n    state = store.getState();\n\n    componentDidMount() {\n        this.loadFoods();\n        console.log()\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let kcalPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n\n        let dtoObj = {\n            id: null,\n            name: this.state.name,\n            weight: this.state.weight,\n            proteinPer100g: this.state.proteinPer100g,\n            fatsPer100g: this.state.fatsPer100g,\n            kcalPer100g: this.state.kcalPer100g,\n            proteinTotal: proteinPerFood,\n            fatsTotal: fatsPerFood,\n            kcalTotal: kcalPerFood,\n            userId: store.getState().auth.user.id,\n            ifFavourite: this.state.ifFavourite\n        }\n\n        apiCalls.saveFood(dtoObj).then(response => {\n            let idFromDb = response.data\n\n            this.setState({\n                foods: [\n                    ...this.state.foods,\n                    { id: idFromDb, name: this.state.name, proteinTotal: proteinPerFood, kcalTotal: kcalPerFood, totalFats: fatsPerFood }\n                ],\n                name: '',\n                weight: 0,\n                proteinPer100g: 0,\n                fatsPer100g: 0,\n                kcalPer100g: 0,\n                totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n                totalDayFats: this.state.totalDayFats + fatsPerFood,\n                totalDayKcal: this.state.totalDayKcal + kcalPerFood\n            })\n        })\n    };\n\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                return obj.id !== val;\n            }),\n            totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n            totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n        })\n        apiCalls.remove(val)\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    loadFoods = () => {\n        apiCalls.getAll().then(response => {\n            this.setState({\n                foods: response.data\n            })\n            let totalDayProtein = 0, totalDayFats = 0, totalDayKcal = 0\n            for (const element of response.data) {\n                totalDayProtein = totalDayProtein + element.proteinTotal\n                totalDayFats = totalDayFats + element.fatsTotal\n                totalDayKcal = totalDayKcal + element.kcalTotal\n            }\n            this.setState({\n                totalDayProtein: totalDayProtein,\n                totalDayFats: totalDayFats,\n                totalDayKcal: totalDayKcal\n            })\n        })\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                proteinPer100g: obj.proteinPer100g,\n                kcalPer100g: obj.kcalPer100g,\n                fatsPer100g: obj.fatsPer100g\n            });\n        }\n    }\n\n    handleCheckBoxChange() {\n        let bool = this.state.ifFavourite === false\n        this.setState({\n            ifFavourite: bool\n        })\n    }\n\n    render() {\n        return <div className=\"container\">\n            <h1>Macro calculator</h1>\n            <h3>Total calories {Math.round(this.state.totalDayKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.totalDayProtein * 100) / 100}g</h3>\n\n            <div className=\"form-group\">\n                <label>food:</label>\n                <input\n                    id=\"multiselect\"\n                    type=\"text\"\n                    name=\"\"\n                    list=\"productName\"\n                    onChange={this.handleNameChange}\n                    value={this.state.name}\n                />\n\n                <datalist id=\"productName\">\n                    {options.map(option => {\n                        return (\n                            <option key={option.id} value={option.value}>{option.value}</option>\n                        );\n                    })}\n                </datalist>\n            </div>\n\n            <div className=\"form-group\">\n                <label>weight (grams):</label>\n                <input\n                    name=\"weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>protein/100g:</label>\n                <input\n                    name=\"proteinPer100g\"\n                    value={this.state.proteinPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>fats/100g</label>\n                <input\n                    name=\"fatsPer100g\"\n                    value={this.state.fatsPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>calories/100g</label>\n                <input\n                    name=\"kcalPer100g\"\n                    value={this.state.kcalPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n\n            <div>\n                <input type=\"checkbox\" id=\"ifFavourite\" name=\"ifFavourite\" value=\"\" onChange={this.handleCheckBoxChange}/>\n                <label htmlFor=\"ifFavourite\">Add to favourites</label>\n            </div>\n\n            <h2>List</h2>\n\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id} className=\"grid-1-1\">\n                        <div>\n                            <p>food: {food.name},\n                                protein: {Math.round(food.proteinTotal * 100) / 100}g, calories: {Math.round(food.kcalTotal * 100) / 100}kcal</p>\n                        </div>\n                        <div className=\"x-btn\">\n                            <button\n                                onClick={() => this.removeObject(food.id)}\n                                type=\"button\">\n                                x\n                            </button>\n                        </div>\n                        <hr />\n                    </div>\n                );\n            })};\n        </div>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,UAAU;AAAC;AAE7B,MAAMC,OAAO,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EACjF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,MAAM;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAE,CAAC,EAChF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,0BAA0B;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAClG;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,eAAe;EAAEC,cAAc,EAAE,KAAK;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAC1F;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,MAAM;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAC9E;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAE,CAAC,EAClF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,YAAY;EAAEC,cAAc,EAAE,GAAG;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EACrF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,wBAAwB;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAChG;EAAEJ,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,cAAc;EAAEC,cAAc,EAAE,EAAE;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EACtF;EAAEJ,EAAE,EAAE,EAAE;EAAEC,KAAK,EAAE,uBAAuB;EAAEC,cAAc,EAAE,IAAI;EAAEC,WAAW,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,CACrG;AAED,MAAMC,SAAS,SAAST,KAAK,CAACU,SAAS,CAAC;EACpCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAoBjBC,KAAK,GAAGX,KAAK,CAACY,QAAQ,EAAE;IAAA,KAOxBC,gBAAgB,GAAGC,CAAC,IAAI;MACpBA,CAAC,CAACC,cAAc,EAAE;MAElB,IAAIC,cAAc,GAAI,IAAI,CAACL,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACP,cAAc,GAAI,GAAG;MAC1E,IAAIc,WAAW,GAAI,IAAI,CAACP,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACN,WAAW,GAAI,GAAG;MACpE,IAAIc,WAAW,GAAI,IAAI,CAACR,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACL,WAAW,GAAI,GAAG;MAEpE,IAAIc,MAAM,GAAG;QACTlB,EAAE,EAAE,IAAI;QACRmB,IAAI,EAAE,IAAI,CAACV,KAAK,CAACU,IAAI;QACrBJ,MAAM,EAAE,IAAI,CAACN,KAAK,CAACM,MAAM;QACzBb,cAAc,EAAE,IAAI,CAACO,KAAK,CAACP,cAAc;QACzCE,WAAW,EAAE,IAAI,CAACK,KAAK,CAACL,WAAW;QACnCD,WAAW,EAAE,IAAI,CAACM,KAAK,CAACN,WAAW;QACnCiB,YAAY,EAAEN,cAAc;QAC5BO,SAAS,EAAEJ,WAAW;QACtBK,SAAS,EAAEN,WAAW;QACtBO,MAAM,EAAEzB,KAAK,CAACY,QAAQ,EAAE,CAACc,IAAI,CAACC,IAAI,CAACzB,EAAE;QACrC0B,WAAW,EAAE,IAAI,CAACjB,KAAK,CAACiB;MAC5B,CAAC;MAED7B,QAAQ,CAAC8B,QAAQ,CAACT,MAAM,CAAC,CAACU,IAAI,CAACC,QAAQ,IAAI;QACvC,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAI;QAE5B,IAAI,CAACC,QAAQ,CAAC;UACVC,KAAK,EAAE,CACH,GAAG,IAAI,CAACxB,KAAK,CAACwB,KAAK,EACnB;YAAEjC,EAAE,EAAE8B,QAAQ;YAAEX,IAAI,EAAE,IAAI,CAACV,KAAK,CAACU,IAAI;YAAEC,YAAY,EAAEN,cAAc;YAAEQ,SAAS,EAAEN,WAAW;YAAEkB,SAAS,EAAEjB;UAAY,CAAC,CACxH;UACDE,IAAI,EAAE,EAAE;UACRJ,MAAM,EAAE,CAAC;UACTb,cAAc,EAAE,CAAC;UACjBE,WAAW,EAAE,CAAC;UACdD,WAAW,EAAE,CAAC;UACdgC,eAAe,EAAE,IAAI,CAAC1B,KAAK,CAAC0B,eAAe,GAAGrB,cAAc;UAC5DsB,YAAY,EAAE,IAAI,CAAC3B,KAAK,CAAC2B,YAAY,GAAGnB,WAAW;UACnDoB,YAAY,EAAE,IAAI,CAAC5B,KAAK,CAAC4B,YAAY,GAAGrB;QAC5C,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAAA,KAGDsB,YAAY,GAAGC,GAAG,IAAI;MAClB,IAAIC,GAAG,GAAG,IAAI,CAAC/B,KAAK,CAACwB,KAAK,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1C,EAAE,KAAKuC,GAAG,CAAC;MAClD,IAAI,CAACP,QAAQ,CAAC;QACVC,KAAK,EAAE,IAAI,CAACxB,KAAK,CAACwB,KAAK,CAACU,MAAM,CAACH,GAAG,IAAI;UAClC,OAAOA,GAAG,CAACxC,EAAE,KAAKuC,GAAG;QACzB,CAAC,CAAC;QACFJ,eAAe,EAAE,IAAI,CAAC1B,KAAK,CAAC0B,eAAe,GAAGK,GAAG,CAACpB,YAAY;QAC9DiB,YAAY,EAAE,IAAI,CAAC5B,KAAK,CAAC4B,YAAY,GAAGG,GAAG,CAAClB;MAChD,CAAC,CAAC;MACFzB,QAAQ,CAAC+C,MAAM,CAACL,GAAG,CAAC;IACxB,CAAC;IAAA,KASDM,SAAS,GAAG,MAAM;MACdhD,QAAQ,CAACiD,MAAM,EAAE,CAAClB,IAAI,CAACC,QAAQ,IAAI;QAC/B,IAAI,CAACG,QAAQ,CAAC;UACVC,KAAK,EAAEJ,QAAQ,CAACE;QACpB,CAAC,CAAC;QACF,IAAII,eAAe,GAAG,CAAC;UAAEC,YAAY,GAAG,CAAC;UAAEC,YAAY,GAAG,CAAC;QAC3D,KAAK,MAAMU,OAAO,IAAIlB,QAAQ,CAACE,IAAI,EAAE;UACjCI,eAAe,GAAGA,eAAe,GAAGY,OAAO,CAAC3B,YAAY;UACxDgB,YAAY,GAAGA,YAAY,GAAGW,OAAO,CAAC1B,SAAS;UAC/CgB,YAAY,GAAGA,YAAY,GAAGU,OAAO,CAACzB,SAAS;QACnD;QACA,IAAI,CAACU,QAAQ,CAAC;UACVG,eAAe,EAAEA,eAAe;UAChCC,YAAY,EAAEA,YAAY;UAC1BC,YAAY,EAAEA;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAvGG,IAAI,CAAC5B,KAAK,GAAG;MACTU,IAAI,EAAE,EAAE;MACRJ,MAAM,EAAE,CAAC;MACTb,cAAc,EAAE,CAAC;MACjBE,WAAW,EAAE,CAAC;MACdD,WAAW,EAAE,CAAC;MACdgC,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,CAAC;MACfJ,KAAK,EAAE,EAAE;MACTP,WAAW,EAAE;IACjB,CAAC;IACD,IAAI,CAACsB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;EAEpE;EAIAG,iBAAiB,GAAG;IAChB,IAAI,CAACP,SAAS,EAAE;IAChBQ,OAAO,CAACC,GAAG,EAAE;EACjB;EAwDAN,YAAY,CAACpC,CAAC,EAAE;IACZ,MAAMX,KAAK,GAAGW,CAAC,CAAC2C,MAAM,CAACtD,KAAK;IAC5B,IAAI,CAAC+B,QAAQ,CAAC;MACV,CAACpB,CAAC,CAAC2C,MAAM,CAACpC,IAAI,GAAGlB;IACrB,CAAC,CAAC;EACN;EAqBAiD,gBAAgB,CAACtC,CAAC,EAAE;IAChB,IAAI4C,CAAC,GAAG5C,CAAC,CAAC2C,MAAM,CAACtD,KAAK;IACtB,IAAI,CAAC+B,QAAQ,CAAC;MACVb,IAAI,EAAEqC;IACV,CAAC,CAAC;IACF,IAAIhB,GAAG,GAAGzC,OAAO,CAAC0C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACzC,KAAK,CAACwD,WAAW,EAAE,KAAKD,CAAC,CAACC,WAAW,EAAE,CAAC;IACtE,IAAIjB,GAAG,EAAE;MACL,IAAI,CAACR,QAAQ,CAAC;QACV9B,cAAc,EAAEsC,GAAG,CAACtC,cAAc;QAClCC,WAAW,EAAEqC,GAAG,CAACrC,WAAW;QAC5BC,WAAW,EAAEoC,GAAG,CAACpC;MACrB,CAAC,CAAC;IACN;EACJ;EAEA+C,oBAAoB,GAAG;IACnB,IAAIO,IAAI,GAAG,IAAI,CAACjD,KAAK,CAACiB,WAAW,KAAK,KAAK;IAC3C,IAAI,CAACM,QAAQ,CAAC;MACVN,WAAW,EAAEgC;IACjB,CAAC,CAAC;EACN;EAEAC,MAAM,GAAG;IACL,oBAAO;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACzB;QAAA,8BAAoBC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACpD,KAAK,CAAC4B,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eAC7E;QAAA,6BAAmBuB,IAAI,CAACC,KAAK,CAAC,IAAI,CAACpD,KAAK,CAAC0B,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eAE5E;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UACI,EAAE,EAAC,aAAa;UAChB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,EAAE;UACP,IAAI,EAAC,aAAa;UAClB,QAAQ,EAAE,IAAI,CAACe,gBAAiB;UAChC,KAAK,EAAE,IAAI,CAACzC,KAAK,CAACU;QAAK;UAAA;UAAA;UAAA;QAAA,QACzB,eAEF;UAAU,EAAE,EAAC,aAAa;UAAA,UACrBpB,OAAO,CAAC+D,GAAG,CAACC,MAAM,IAAI;YACnB,oBACI;cAAwB,KAAK,EAAEA,MAAM,CAAC9D,KAAM;cAAA,UAAE8D,MAAM,CAAC9D;YAAK,GAA7C8D,MAAM,CAAC/D,EAAE;cAAA;cAAA;cAAA;YAAA,QAA8C;UAE5E,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA8B,eAC9B;UACI,IAAI,EAAC,QAAQ;UACb,KAAK,EAAE,IAAI,CAACS,KAAK,CAACM,MAAO;UACzB,QAAQ,EAAE,IAAI,CAACiC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA4B,eAC5B;UACI,IAAI,EAAC,gBAAgB;UACrB,KAAK,EAAE,IAAI,CAACvC,KAAK,CAACP,cAAe;UACjC,QAAQ,EAAE,IAAI,CAAC8C;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UACI,IAAI,EAAC,aAAa;UAClB,KAAK,EAAE,IAAI,CAACvC,KAAK,CAACL,WAAY;UAC9B,QAAQ,EAAE,IAAI,CAAC4C;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA4B,eAC5B;UACI,IAAI,EAAC,aAAa;UAClB,KAAK,EAAE,IAAI,CAACvC,KAAK,CAACN,WAAY;UAC9B,QAAQ,EAAE,IAAI,CAAC6C;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QACI,SAAS,EAAC,YAAY;QACtB,OAAO,EAAE,IAAI,CAACrC,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1B,eAET;QAAA,wBACI;UAAO,IAAI,EAAC,UAAU;UAAC,EAAE,EAAC,aAAa;UAAC,IAAI,EAAC,aAAa;UAAC,KAAK,EAAC,EAAE;UAAC,QAAQ,EAAE,IAAI,CAACwC;QAAqB;UAAA;UAAA;UAAA;QAAA,QAAE,eAC1G;UAAO,OAAO,EAAC,aAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B;MAAA;QAAA;QAAA;QAAA;MAAA,QACpD,eAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,EAEZ,IAAI,CAAC1C,KAAK,CAACwB,KAAK,CAAC6B,GAAG,CAACE,IAAI,IAAI;QAC1B,oBACI;UAAmB,SAAS,EAAC,UAAU;UAAA,wBACnC;YAAA,uBACI;cAAA,qBAAUA,IAAI,CAAC7C,IAAI,iBACLyC,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC5C,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,mBAAewC,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC1C,SAAS,GAAG,GAAG,CAAC,GAAG,GAAG;YAAA;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QACnH,eACN;YAAK,SAAS,EAAC,OAAO;YAAA,uBAClB;cACI,OAAO,EAAE,MAAM,IAAI,CAACgB,YAAY,CAAC0B,IAAI,CAAChE,EAAE,CAAE;cAC1C,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAER;YAAA;YAAA;YAAA;UAAA,QACP,eACN;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAZAgE,IAAI,CAAChE,EAAE;UAAA;UAAA;UAAA;QAAA,QAaX;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EACV;AACJ;AAEA,eAAeK,SAAS"},"metadata":{},"sourceType":"module"}