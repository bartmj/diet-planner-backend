{"ast":null,"code":"import axios from 'axios';\nconst rdsUrl = 'dietplannerrds-env.eba-s2nrkgap.eu-north-1.elasticbeanstalk.com';\nconst localhost = \"localhost:5000\";\nconst port = \"5000\";\nconst API_URL = `http://${localhost}:${port}/api/auth`;\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localhost.getItem('user'));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","rdsUrl","localhost","port","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","parse","getItem"],"sources":["/home/bartekj/diet-planner/src/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios'\n\nconst rdsUrl = 'dietplannerrds-env.eba-s2nrkgap.eu-north-1.elasticbeanstalk.com'\nconst localhost = \"localhost:5000\";\nconst port = \"5000\";\n\nconst API_URL = `http://${localhost}:${port}/api/auth`;\n\nclass AuthService {\n    login(username, password) {\n        return axios.post(API_URL + \"signin\", {\n            username,\n            password\n        }).then(response => {\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\n            }\n\n            return response.data;\n        });\n    }\n    logout() {\n        localStorage.removeItem(\"user\")\n    }\n    register(username, email, password) {\n        return axios.post(API_URL + \"signup\", {\n                username,\n                email,\n                password\n        });\n    }\n    getCurrentUser() {\n        return JSON.parse(localhost.getItem('user'));\n    }\n\n}\n\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,iEAAiE;AAChF,MAAMC,SAAS,GAAG,gBAAgB;AAClC,MAAMC,IAAI,GAAG,MAAM;AAEnB,MAAMC,OAAO,GAAI,UAASF,SAAU,IAAGC,IAAK,WAAU;AAEtD,MAAME,WAAW,CAAC;EACdC,KAAK,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACtB,OAAOR,KAAK,CAACS,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MAClCG,QAAQ;MACRC;IACJ,CAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC3BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC/D;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC;EACN;EACAM,MAAM,GAAG;IACLJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACnC;EACAC,QAAQ,CAACb,QAAQ,EAAEc,KAAK,EAAEb,QAAQ,EAAE;IAChC,OAAOR,KAAK,CAACS,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MAC9BG,QAAQ;MACRc,KAAK;MACLb;IACR,CAAC,CAAC;EACN;EACAc,cAAc,GAAG;IACb,OAAON,IAAI,CAACO,KAAK,CAACrB,SAAS,CAACsB,OAAO,CAAC,MAAM,CAAC,CAAC;EAChD;AAEJ;AAEA,eAAe,IAAInB,WAAW,EAAE"},"metadata":{},"sourceType":"module"}