{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport { saveFood } from \"../api/apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  proteinPer100g: 27,\n  kcalPer100g: 239\n}, {\n  id: 2,\n  value: 'eggs',\n  proteinPer100g: 13,\n  kcalPer100g: 155.1\n}, {\n  id: 3,\n  value: 'cheese piątnica semi-fat',\n  proteinPer100g: 16,\n  kcalPer100g: 485\n}, {\n  id: 4,\n  value: 'peanut butter',\n  proteinPer100g: 23.78,\n  kcalPer100g: 642\n}, {\n  id: 5,\n  value: 'oats',\n  proteinPer100g: 14,\n  kcalPer100g: 418\n}, {\n  id: 6,\n  value: 'walnut',\n  proteinPer100g: 15,\n  kcalPer100g: 654.4\n}, {\n  id: 7,\n  value: 'dark bread',\n  proteinPer100g: 8.5,\n  kcalPer100g: 218\n}, {\n  id: 8,\n  value: 'protein bar Olymp 64 g',\n  proteinPer100g: 31,\n  kcalPer100g: 369\n}, {\n  id: 9,\n  value: 'WPI 90 Olymp',\n  proteinPer100g: 90,\n  kcalPer100g: 373\n}, {\n  id: 10,\n  value: 'wheat noodles, cooked',\n  proteinPer100g: 5.15,\n  kcalPer100g: 131\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.proteinPer100g / 100;\n      let kcalPerFood = this.state.weight * this.state.kcalPer100g / 100;\n      let fatsPerFood = this.state.weight * this.state.fatsPer100g / 100;\n      this.setState({\n        foods: [...this.state.foods, {\n          id: this.state.id + 1,\n          name: this.state.name,\n          totalProtein: proteinPerFood,\n          totalKcal: kcalPerFood,\n          totalFats: fatsPerFood\n        }],\n        id: this.state.id + 1,\n        name: '',\n        totalProtein: proteinPerFood,\n        totalKcal: kcalPerFood,\n        totalFats: fatsPerFood,\n        totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n        totalDayFats: this.state.totalDayFats + fatsPerFood,\n        totalDayKcal: this.state.totalDayKcal + kcalPerFood\n      });\n      saveFood();\n      this.setState({\n        weight: 0,\n        proteinPer100g: 0,\n        fatsPer100g: 0,\n        kcalPer100g: 0\n      });\n    };\n    this.saveFood = () => {\n      console.log(\"Save food\");\n      apiCalls.saveFood(this.state.name, this.state.weight, this.state.proteinPer100g, this.state.fatsPer100g, this.state.kcalPer100g, this.state.proteinTotal, this.state.fatsTotal, this.state.kcalTotal).then(response => {\n        console.log(response.data);\n      });\n    };\n    this.removeObject = val => {\n      let obj = this.state.foods.find(o => o.id === val);\n      this.setState({\n        foods: this.state.foods.filter(obj => {\n          console.log(obj);\n          return obj.id !== val;\n        }),\n        totalDayProtein: this.state.totalDayProtein - obj.totalProtein,\n        totalDayKcal: this.state.totalDayKcal - obj.totalKcal\n      });\n    };\n    this.state = {\n      id: 0,\n      name: '',\n      weight: 0,\n      proteinPer100g: 0,\n      fatsPer100g: 0,\n      kcalPer100g: 0,\n      totalProtein: 0,\n      totalFats: 0,\n      totalKcal: 0,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayKcal: 0,\n      foods: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    if (obj) {\n      this.setState({\n        proteinPer100g: obj.proteinPer100g,\n        kcalPer100g: obj.kcalPer100g\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalDayKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.totalDayProtein * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"food:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"productName\",\n        children: options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"weight (grams):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"protein/100g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"proteinPer100g\",\n        value: this.state.proteinPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"calories/100g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"caloriesPer100g\",\n        value: this.state.kcalPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"food: \", food.name, \", protein: \", Math.round(food.totalProtein * 100) / 100, \"g, calories: \", Math.round(food.totalKcal * 100) / 100, \"kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removeObject(food.id),\n            type: \"button\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","apiCalls","saveFood","options","id","value","proteinPer100g","kcalPer100g","UserPanel","Component","constructor","props","addObjectToArray","e","preventDefault","proteinPerFood","state","weight","kcalPerFood","fatsPerFood","fatsPer100g","setState","foods","name","totalProtein","totalKcal","totalFats","totalDayProtein","totalDayFats","totalDayKcal","console","log","proteinTotal","fatsTotal","kcalTotal","then","response","data","removeObject","val","obj","find","o","filter","handleChange","bind","handleNameChange","target","n","toLowerCase","render","Math","round","map","option","food"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport {saveFood} from \"../api/apiCalls\";\n\nconst options = [\n    { id: 1, value: 'chicken', proteinPer100g: 27, kcalPer100g: 239 },\n    { id: 2, value: 'eggs', proteinPer100g: 13, kcalPer100g: 155.1 },\n    { id: 3, value: 'cheese piątnica semi-fat', proteinPer100g: 16, kcalPer100g: 485 },\n    { id: 4, value: 'peanut butter', proteinPer100g: 23.78, kcalPer100g: 642 },\n    { id: 5, value: 'oats', proteinPer100g: 14, kcalPer100g: 418 },\n    { id: 6, value: 'walnut', proteinPer100g: 15, kcalPer100g: 654.4 },\n    { id: 7, value: 'dark bread', proteinPer100g: 8.5, kcalPer100g: 218 },\n    { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, kcalPer100g: 369 },\n    { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, kcalPer100g: 373 },\n    { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, kcalPer100g: 131 }\n]\n\nclass UserPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            name: '',\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n            totalProtein: 0,\n            totalFats: 0,\n            totalKcal: 0,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayKcal: 0,\n            foods: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let kcalPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n\n        this.setState({\n            foods: [\n                ...this.state.foods,\n                { id: this.state.id + 1, name: this.state.name, totalProtein: proteinPerFood, totalKcal: kcalPerFood, totalFats: fatsPerFood }\n            ],\n            id: this.state.id + 1,\n            name: '',\n            totalProtein: proteinPerFood,\n            totalKcal: kcalPerFood,\n            totalFats: fatsPerFood,\n            totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n            totalDayFats: this.state.totalDayFats + fatsPerFood,\n            totalDayKcal: this.state.totalDayKcal + kcalPerFood\n        })\n\n        saveFood();\n\n        this.setState({\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n        })\n    };\n\n    saveFood = () => {\n        console.log(\"Save food\")\n        apiCalls.saveFood(\n            this.state.name,\n            this.state.weight,\n            this.state.proteinPer100g,\n            this.state.fatsPer100g,\n            this.state.kcalPer100g,\n            this.state.proteinTotal,\n            this.state.fatsTotal,\n            this.state.kcalTotal\n\n        ).then(response => {\n            console.log(response.data)\n        })\n    };\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                console.log(obj)\n                return obj.id !== val;\n            }),\n            totalDayProtein: this.state.totalDayProtein - obj.totalProtein,\n            totalDayKcal: this.state.totalDayKcal - obj.totalKcal\n\n        })\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                proteinPer100g: obj.proteinPer100g,\n                kcalPer100g: obj.kcalPer100g\n            });\n        }\n    }\n\n    render() {\n        return <>\n            <h3>Total calories {Math.round(this.state.totalDayKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.totalDayProtein * 100) / 100}g</h3>\n\n            <label>food:</label>\n            <input\n                id=\"multiselect\"\n                type=\"text\"\n                name=\"\"\n                list=\"productName\"\n                onChange={this.handleNameChange}\n                value={this.state.name} />\n            <datalist id=\"productName\">\n                {options.map(option => {\n                    return (\n                        <option key={option.id} value={option.value}>{option.value}</option>\n                    );\n                })}\n            </datalist>\n            <label>weight (grams):</label>\n            <input\n                name=\"weight\"\n                value={this.state.weight}\n                onChange={this.handleChange} />\n            <label>protein/100g:</label>\n            <input\n                name=\"proteinPer100g\"\n                value={this.state.proteinPer100g}\n                onChange={this.handleChange} />\n            <label>calories/100g</label>\n            <input\n                name=\"caloriesPer100g\"\n                value={this.state.kcalPer100g}\n                onChange={this.handleChange} />\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <p>food: {food.name}, protein: {Math.round(food.totalProtein * 100) / 100}g, calories: {Math.round(food.totalKcal * 100) / 100}kcal</p>\n                        <button\n                            onClick={() => this.removeObject(food.id)}\n                            type=\"button\">x</button>\n                        <hr />\n                    </div>\n                );\n            })}\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n        </>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}