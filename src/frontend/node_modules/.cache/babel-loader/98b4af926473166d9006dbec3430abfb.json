{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/Projects/diet-planner/src/components/UserPanel.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  protein: 27,\n  calories: 239\n}, {\n  id: 2,\n  value: 'eggs',\n  protein: 13,\n  calories: 155.1\n}, {\n  id: 3,\n  value: 'cheese piątnica semi-fat',\n  protein: 16,\n  calories: 485\n}, {\n  id: 4,\n  value: 'peanut butter',\n  protein: 23.78,\n  calories: 642\n}, {\n  id: 5,\n  value: 'oats',\n  protein: 14,\n  calories: 418\n}, {\n  id: 6,\n  value: 'walnut',\n  protein: 15,\n  calories: 654.4\n}, {\n  id: 7,\n  value: 'dark bread',\n  protein: 8.5,\n  calories: 218\n}, {\n  id: 8,\n  value: 'protein bar Olymp 64 g',\n  protein: 31,\n  calories: 369\n}, {\n  id: 9,\n  value: 'WPI 90 Olymp',\n  protein: 90,\n  calories: 373\n}, {\n  id: 10,\n  value: 'wheat noodles, cooked',\n  protein: 5.15,\n  calories: 131\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.protein / 100;\n      let caloriesPerFood = this.state.weight * this.state.calories / 100;\n      this.setState({\n        foods: [...this.state.foods, {\n          id: this.state.id + 1,\n          name: this.state.name,\n          protein: proteinPerFood,\n          calories: caloriesPerFood\n        }],\n        name: '',\n        protein: 0,\n        weight: 0,\n        id: this.state.id + 1,\n        total: this.state.total + proteinPerFood,\n        totalKcal: this.state.totalKcal + caloriesPerFood\n      });\n    };\n    this.state = {\n      weight: 0,\n      protein: 0,\n      total: 0,\n      totalKcal: 0,\n      calories: 0,\n      id: 0,\n      name: '',\n      foods: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleChange(e) {\n    console.log(e.target);\n    // const value = e.target.\n\n    // this.setState({\n    //     [e.target.name]: value\n    // });\n\n    // if(value === 'weight') {\n\n    // }\n\n    // === \"checkbox\" ? evt.target.checked : evt.target.value;\n    // setState({\n    //   ...state,\n    //   [evt.target.name]: value\n    // });\n  }\n\n  // handleWeightChange(e) {\n  //     let name = e.target.name\n  //     let x = null\n  //     if(name == 'weight') {\n  //         x = \n  //     }\n  //     console.log()\n  //     this.setState({\n  //         weight: e.target.value\n  //     });\n  // }\n\n  // handleProteinChange(e) {\n  //     console.log(e.target)\n  //     this.setState({\n  //         protein: e.target.value\n  //     });\n  // }\n\n  // handleCaloriesChange(e) {\n  //     console.log(e.target)\n  //     this.setState({\n  //         calories: e.target.value\n  //     });\n  // }\n\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    if (obj) {\n      this.setState({\n        protein: obj.protein,\n        calories: obj.calories\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.total * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"food:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"productName\",\n        children: options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"weight (grams):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"protein/100g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"protein\",\n        value: this.state.protein,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"calories/100g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"calories\",\n        value: this.state.calories,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"food: \", food.name, \", protein: \", food.protein, \"g, calories: \", food.calories]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","options","id","value","protein","calories","UserPanel","Component","constructor","props","addObjectToArray","e","preventDefault","proteinPerFood","state","weight","caloriesPerFood","setState","foods","name","total","totalKcal","handleChange","bind","handleNameChange","console","log","target","n","obj","find","o","toLowerCase","render","Math","round","map","option","food"],"sources":["/home/bartekj/Projects/diet-planner/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\n\nconst options = [\n    { id: 1, value: 'chicken', protein: 27, calories: 239 },\n    { id: 2, value: 'eggs', protein: 13, calories: 155.1 },\n    { id: 3, value: 'cheese piątnica semi-fat', protein: 16, calories: 485 },\n    { id: 4, value: 'peanut butter', protein: 23.78, calories: 642 },\n    { id: 5, value: 'oats', protein: 14, calories: 418 },\n    { id: 6, value: 'walnut', protein: 15, calories: 654.4 },\n    { id: 7, value: 'dark bread', protein: 8.5, calories: 218 },\n    { id: 8, value: 'protein bar Olymp 64 g', protein: 31, calories: 369 },\n    { id: 9, value: 'WPI 90 Olymp', protein: 90, calories: 373 },\n    { id: 10, value: 'wheat noodles, cooked', protein: 5.15, calories: 131 }\n]\n\nclass UserPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: 0,\n            protein: 0,\n            total: 0,\n            totalKcal: 0,\n            calories: 0,\n            id: 0,\n            name: '',\n            foods: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n        let proteinPerFood = (this.state.weight * this.state.protein) / 100\n        let caloriesPerFood = (this.state.weight * this.state.calories) / 100\n        this.setState({\n            foods: [\n                ...this.state.foods,\n                { id: this.state.id + 1, name: this.state.name, protein: proteinPerFood, calories: caloriesPerFood }\n            ],\n            name: '',\n            protein: 0,\n            weight: 0,\n            id: this.state.id + 1,\n            total: this.state.total + proteinPerFood,\n            totalKcal: this.state.totalKcal + caloriesPerFood\n        })\n    };\n\n    handleChange(e) {\n        console.log(e.target)\n        // const value = e.target.\n\n        // this.setState({\n        //     [e.target.name]: value\n        // });\n\n\n\n        // if(value === 'weight') {\n\n        // }\n\n        // === \"checkbox\" ? evt.target.checked : evt.target.value;\n        // setState({\n        //   ...state,\n        //   [evt.target.name]: value\n        // });\n    }\n\n    // handleWeightChange(e) {\n    //     let name = e.target.name\n    //     let x = null\n    //     if(name == 'weight') {\n    //         x = \n    //     }\n    //     console.log()\n    //     this.setState({\n    //         weight: e.target.value\n    //     });\n    // }\n\n    // handleProteinChange(e) {\n    //     console.log(e.target)\n    //     this.setState({\n    //         protein: e.target.value\n    //     });\n    // }\n\n    // handleCaloriesChange(e) {\n    //     console.log(e.target)\n    //     this.setState({\n    //         calories: e.target.value\n    //     });\n    // }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                protein: obj.protein,\n                calories: obj.calories\n            });\n        }\n    }\n\n    render() {\n        return <>\n            <h3>Total calories {Math.round(this.state.totalKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.total * 100) / 100}g</h3>\n\n            <label>food:</label>\n            <input\n                id=\"multiselect\"\n                type=\"text\"\n                name=\"\"\n                list=\"productName\"\n                onChange={this.handleNameChange}\n                value={this.state.name} />\n            <datalist id=\"productName\">\n                {options.map(option => {\n                    return (\n                        <option key={option.id} value={option.value}>{option.value}</option>\n                    );\n                })}\n            </datalist>\n            <label>weight (grams):</label>\n            <input\n                name=\"weight\"\n                value={this.state.weight}\n                onChange={this.handleChange} />\n            <label>protein/100g:</label>\n            <input\n                name=\"protein\"\n                value={this.state.protein}\n                onChange={this.handleChange} />\n            <label>calories/100g</label>\n            <input\n                name=\"calories\"\n                value={this.state.calories}\n                onChange={this.handleChange} />\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <p>food: {food.name}, protein: {food.protein}g, calories: {food.calories}</p>\n                        <hr />\n                    </div>\n                );\n            })}\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n        </>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}