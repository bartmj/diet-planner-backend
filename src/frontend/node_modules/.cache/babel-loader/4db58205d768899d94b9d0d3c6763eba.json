{"ast":null,"code":"import _defineProperty from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/bartekj/diet-planner/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/MacroCalculator.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\nvar MacroCalculator = /*#__PURE__*/function (_React$Component) {\n  _inherits(MacroCalculator, _React$Component);\n  function MacroCalculator(props) {\n    var _this;\n    _classCallCheck(this, MacroCalculator);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MacroCalculator).call(this, props));\n    _this.state = store.getState();\n    _this.addObjectToArray = function (e) {\n      e.preventDefault();\n      var proteinPerFood = _this.state.weight * _this.state.proteinPer100g / 100;\n      var kcalPerFood = _this.state.weight * _this.state.kcalPer100g / 100;\n      var fatsPerFood = _this.state.weight * _this.state.fatsPer100g / 100;\n      var carbsPerFood = _this.state.weight * _this.state.carbsPer100g / 100;\n      var dtoObj = {\n        id: null,\n        name: _this.state.name,\n        weight: _this.state.weight,\n        proteinPer100g: _this.state.proteinPer100g,\n        fatsPer100g: _this.state.fatsPer100g,\n        kcalPer100g: _this.state.kcalPer100g,\n        carbsPer100g: _this.state.carbsPer100g,\n        proteinTotal: proteinPerFood,\n        fatsTotal: fatsPerFood,\n        kcalTotal: kcalPerFood,\n        carbsTotal: carbsPerFood,\n        ifFavourite: _this.state.ifFavourite\n      };\n      apiCalls.saveFood(dtoObj).then(function (response) {\n        var id = response.data.id;\n        _this.setState({\n          foods: [].concat(_toConsumableArray(_this.state.foods), [{\n            id: id,\n            name: _this.state.name,\n            proteinTotal: proteinPerFood,\n            kcalTotal: kcalPerFood,\n            fatsTotal: fatsPerFood,\n            carbsTotal: carbsPerFood\n          }]),\n          name: '',\n          weight: 0,\n          proteinPer100g: 0,\n          fatsPer100g: 0,\n          kcalPer100g: 0,\n          carbsPer100g: 0,\n          totalDayProtein: _this.state.totalDayProtein + proteinPerFood,\n          totalDayFats: _this.state.totalDayFats + fatsPerFood,\n          totalDayKcal: _this.state.totalDayKcal + kcalPerFood,\n          totalDayCarbs: _this.state.totalDayCarbs + carbsPerFood,\n          ifFavourite: false\n        });\n      });\n      _this.loadFavourites();\n    };\n    _this.removeObject = function (val) {\n      var obj = _this.state.foods.find(function (o) {\n        return o.id === val;\n      });\n      _this.setState({\n        foods: _this.state.foods.filter(function (obj) {\n          return obj.id !== val;\n        }),\n        totalDayProtein: _this.state.totalDayProtein - obj.proteinTotal,\n        totalDayKcal: _this.state.totalDayKcal - obj.kcalTotal,\n        totalDayFats: _this.state.totalDayFats - obj.fatsTotal,\n        totalDayCarbs: _this.state.totalDayCarbs - obj.carbsTotal\n      });\n      apiCalls.remove(val);\n    };\n    _this.loadFoods = function () {\n      apiCalls.getAll().then(function (response) {\n        _this.setState({\n          foods: response.data\n        });\n        var totalDayProtein = 0,\n          totalDayFats = 0,\n          totalDayKcal = 0,\n          totalDayCarbs = 0;\n        var _iterator = _createForOfIteratorHelper(response.data),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n            totalDayProtein = totalDayProtein + element.proteinTotal;\n            totalDayFats = totalDayFats + element.fatsTotal;\n            totalDayKcal = totalDayKcal + element.kcalTotal;\n            totalDayCarbs = totalDayCarbs + element.carbsTotal;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _this.setState({\n          totalDayProtein: totalDayProtein,\n          totalDayFats: totalDayFats,\n          totalDayKcal: totalDayKcal,\n          totalDayCarbs: totalDayCarbs\n        });\n      });\n    };\n    _this.state = {\n      name: '',\n      weight: undefined,\n      proteinPer100g: undefined,\n      fatsPer100g: undefined,\n      carbsPer100g: undefined,\n      kcalPer100g: undefined,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayCarbs: 0,\n      totalDayKcal: 0,\n      foods: [],\n      ifFavourite: false,\n      options: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCheckBoxChange = _this.handleCheckBoxChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(MacroCalculator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFoods();\n      this.loadFavourites();\n    }\n  }, {\n    key: \"loadFavourites\",\n    value: function loadFavourites() {\n      var _this2 = this;\n      apiCalls.getFavourites().then(function (res) {\n        _this2.setState({\n          options: res.data\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var value = e.target.value;\n      this.setState(_defineProperty({}, e.target.name, value));\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      var n = e.target.value;\n      this.setState({\n        name: n\n      });\n      var obj = this.state.options.find(function (o) {\n        return o.name.toLowerCase() === n.toLowerCase();\n      });\n      if (obj) {\n        this.setState({\n          proteinPer100g: obj.proteinPer100g,\n          kcalPer100g: obj.kcalPer100g,\n          fatsPer100g: obj.fatsPer100g,\n          carbsPer100g: obj.carbsPer100g\n        });\n      }\n    }\n  }, {\n    key: \"handleCheckBoxChange\",\n    value: function handleCheckBoxChange() {\n      var bool = this.state.ifFavourite === false;\n      this.setState({\n        ifFavourite: bool\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, \"Macro calculator\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, \"food: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"datalist\", {\n        id: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, this.state.options.map(function (option) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: option.id,\n          value: option.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }\n        }, option.name);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, \"weight (grams):\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, \"protein/100g: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"proteinPer100g\",\n        value: this.state.proteinPer100g,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, \"fats/100g: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"fatsPer100g\",\n        value: this.state.fatsPer100g,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, \"carbohydrates/100g: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"carbsPer100g\",\n        value: this.state.carbsPer100g,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, \"calories/100g: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"kcalPer100g\",\n        value: this.state.kcalPer100g,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, \"Add food\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"ifFavourite\",\n        name: \"ifFavourite\",\n        checked: this.state.ifFavourite ? 'checked' : '',\n        onChange: this.handleCheckBoxChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"ifFavourite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, \"Add to favourites\"))), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Today:\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, \"Total calories \", Math.round(this.state.totalDayKcal * 100) / 100, \"kcal\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, \"Total protein \", Math.round(this.state.totalDayProtein * 100) / 100, \"g\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, \"Total fats \", Math.round(this.state.totalDayFats * 100) / 100, \"g\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, \"Total carbohydrates \", Math.round(this.state.totalDayCarbs * 100) / 100, \"g\"), this.state.foods.map(function (food) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: food.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }\n        }, food.name, \", protein: \", Math.round(food.proteinTotal * 100) / 100, \"g, calories: \", Math.round(food.kcalTotal * 100) / 100, \"kcal, fats: \", Math.round(food.fatsTotal * 100) / 100, \"g, carbohydrates: \", Math.round(food.carbsTotal * 100) / 100, \"g\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"x-btn\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.removeObject(food.id);\n          },\n          type: \"button\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }\n        }, \"x\"))), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }\n        }));\n      }));\n    }\n  }]);\n  return MacroCalculator;\n}(React.Component);\nexport default MacroCalculator;","map":{"version":3,"names":["React","apiCalls","store","MacroCalculator","props","state","getState","addObjectToArray","e","preventDefault","proteinPerFood","weight","proteinPer100g","kcalPerFood","kcalPer100g","fatsPerFood","fatsPer100g","carbsPerFood","carbsPer100g","dtoObj","id","name","proteinTotal","fatsTotal","kcalTotal","carbsTotal","ifFavourite","saveFood","then","response","data","setState","foods","totalDayProtein","totalDayFats","totalDayKcal","totalDayCarbs","loadFavourites","removeObject","val","obj","find","o","filter","remove","loadFoods","getAll","element","undefined","options","handleChange","bind","handleNameChange","handleCheckBoxChange","getFavourites","res","value","target","n","toLowerCase","bool","map","option","Math","round","food","Component"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/MacroCalculator.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\n\nclass MacroCalculator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            weight: undefined,\n            proteinPer100g: undefined,\n            fatsPer100g: undefined,\n            carbsPer100g: undefined,\n            kcalPer100g: undefined,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayCarbs: 0,\n            totalDayKcal: 0,\n            foods: [],\n            ifFavourite: false,\n            options: []\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n    }\n\n    state = store.getState();\n\n    componentDidMount() {\n        this.loadFoods();\n        this.loadFavourites();\n    }\n\n    loadFavourites() {\n        apiCalls.getFavourites().then((res) => {\n            this.setState({\n                options: res.data\n            })\n        })\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let kcalPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n        let carbsPerFood = (this.state.weight * this.state.carbsPer100g) / 100\n\n        let dtoObj = {\n            id: null,\n            name: this.state.name,\n            weight: this.state.weight,\n            proteinPer100g: this.state.proteinPer100g,\n            fatsPer100g: this.state.fatsPer100g,\n            kcalPer100g: this.state.kcalPer100g,\n            carbsPer100g: this.state.carbsPer100g,\n            proteinTotal: proteinPerFood,\n            fatsTotal: fatsPerFood,\n            kcalTotal: kcalPerFood,\n            carbsTotal: carbsPerFood,\n            ifFavourite: this.state.ifFavourite\n        }\n\n        apiCalls.saveFood(dtoObj).then(response => {\n            const {\n                data: { id }\n            } = response\n\n            this.setState({\n                foods: [\n                    ...this.state.foods,\n                    { id: id, name: this.state.name,\n                        proteinTotal: proteinPerFood,\n                        kcalTotal: kcalPerFood,\n                        fatsTotal: fatsPerFood,\n                        carbsTotal: carbsPerFood}\n                ],\n                name: '',\n                weight: 0,\n                proteinPer100g: 0,\n                fatsPer100g: 0,\n                kcalPer100g: 0,\n                carbsPer100g: 0,\n                totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n                totalDayFats: this.state.totalDayFats + fatsPerFood,\n                totalDayKcal: this.state.totalDayKcal + kcalPerFood,\n                totalDayCarbs: this.state.totalDayCarbs + carbsPerFood,\n                ifFavourite: false\n            })\n        })\n        this.loadFavourites();\n    };\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                return obj.id !== val;\n            }),\n            totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n            totalDayKcal: this.state.totalDayKcal - obj.kcalTotal,\n            totalDayFats: this.state.totalDayFats - obj.fatsTotal,\n            totalDayCarbs: this.state.totalDayCarbs - obj.carbsTotal\n\n        })\n        apiCalls.remove(val)\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    loadFoods = () => {\n        apiCalls.getAll().then(response => {\n            this.setState({\n                foods: response.data\n            })\n            let totalDayProtein = 0, totalDayFats = 0, totalDayKcal = 0, totalDayCarbs = 0\n            for (const element of response.data) {\n                totalDayProtein = totalDayProtein + element.proteinTotal\n                totalDayFats = totalDayFats + element.fatsTotal\n                totalDayKcal = totalDayKcal + element.kcalTotal\n                totalDayCarbs = totalDayCarbs + element.carbsTotal\n            }\n            this.setState({\n                totalDayProtein: totalDayProtein,\n                totalDayFats: totalDayFats,\n                totalDayKcal: totalDayKcal,\n                totalDayCarbs: totalDayCarbs\n            })\n        })\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = this.state.options.find(o => o.name.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                proteinPer100g: obj.proteinPer100g,\n                kcalPer100g: obj.kcalPer100g,\n                fatsPer100g: obj.fatsPer100g,\n                carbsPer100g: obj.carbsPer100g\n            });\n        }\n    }\n\n    handleCheckBoxChange() {\n        let bool = this.state.ifFavourite === false\n        this.setState({\n            ifFavourite: bool\n        })\n    }\n\n    render() {\n        return <div className=\"container\">\n            <h1>Macro calculator</h1>\n\n            <div className=\"form-group\">\n                <label>food: </label>\n                <br></br>\n                <input\n                    id=\"multiselect\"\n                    type=\"text\"\n                    name=\"\"\n                    list=\"productName\"\n                    onChange={this.handleNameChange}\n                    value={this.state.name}\n                />\n\n                <datalist id=\"productName\">\n                    {this.state.options.map(option => {\n                        return (\n                            <option key={option.id} value={option.name}>{option.name}</option>\n                        );\n                    })}\n                </datalist>\n            </div>\n\n            <div className=\"form-group\">\n                <label>weight (grams):</label>\n                <br></br>\n                <input\n                    name=\"weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>protein/100g: </label>\n                <br></br>\n                <input\n                    name=\"proteinPer100g\"\n                    value={this.state.proteinPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>fats/100g: </label>\n                <br></br>\n                <input\n                    name=\"fatsPer100g\"\n                    value={this.state.fatsPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>carbohydrates/100g: </label>\n                <br></br>\n                <input\n                    name=\"carbsPer100g\"\n                    value={this.state.carbsPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>calories/100g: </label>\n                <br></br>\n                <input\n                    name=\"kcalPer100g\"\n                    value={this.state.kcalPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"flex-01\">\n                <button\n                    className=\"add-button\"\n                    onClick={this.addObjectToArray}>\n                    Add food\n                </button>\n\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        id=\"ifFavourite\"\n                        name=\"ifFavourite\"\n                        checked={this.state.ifFavourite ? 'checked' : ''}\n                        onChange={this.handleCheckBoxChange}/>\n                    <label htmlFor=\"ifFavourite\">Add to favourites</label>\n                </div>\n            </div>\n\n            <h4>Today:</h4>\n            <h4>Total calories {Math.round(this.state.totalDayKcal * 100) / 100}kcal</h4>\n            <h4>Total protein {Math.round(this.state.totalDayProtein * 100) / 100}g</h4>\n            <h4>Total fats {Math.round(this.state.totalDayFats * 100) / 100}g</h4>\n            <h4>Total carbohydrates {Math.round(this.state.totalDayCarbs * 100) / 100}g</h4>\n\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <div className=\"flex\">\n                            <div>\n                                <p>{food.name},\n                                    protein: {Math.round(food.proteinTotal * 100) / 100}g,\n                                    calories: {Math.round(food.kcalTotal * 100) / 100}kcal,\n                                    fats: {Math.round(food.fatsTotal * 100) / 100}g,\n                                    carbohydrates: {Math.round(food.carbsTotal * 100) / 100}g\n                                </p>\n                            </div>\n                            <div className=\"x-btn\">\n                                <button\n                                    onClick={() => this.removeObject(food.id)}\n                                    type=\"button\">\n                                    x\n                                </button>\n                            </div>\n                        </div>\n                        <hr />\n                    </div>\n                );\n            })}\n        </div>\n    }\n}\n\nexport default MacroCalculator;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}