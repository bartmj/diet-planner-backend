{"ast":null,"code":"import axios from 'axios';\n\n// const port = 5000\n\nconst rdsUrl = 'dietplannerrds-env.eba-s2nrkgap.eu-north-1.elasticbeanstalk.com';\nconst basePath = `https://${rdsUrl}/foods`;\nexport const remove = val => {\n  axios.delete(basePath + '/all/' + val);\n};\nexport const saveFood = stoObj => {\n  let reqInstance = axios.create({\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n    }\n  });\n  return reqInstance.post(basePath + `/add`, stoObj);\n};\nexport const getAll = () => {\n  return axios.get(basePath + '/all');\n};","map":{"version":3,"names":["axios","rdsUrl","basePath","remove","val","delete","saveFood","stoObj","reqInstance","create","headers","Authorization","localStorage","getItem","post","getAll","get"],"sources":["/home/bartekj/diet-planner/src/frontend/src/api/apiCalls.js"],"sourcesContent":["import axios from 'axios';\n\n// const port = 5000\n\nconst rdsUrl = 'dietplannerrds-env.eba-s2nrkgap.eu-north-1.elasticbeanstalk.com'\n\nconst basePath = `https://${rdsUrl}/foods`;\n\nexport const remove = (val) => {\n    axios.delete(basePath + '/all/' + val)\n}\n\nexport const saveFood = (stoObj) => {\n    let reqInstance = axios.create({\n        headers: {\n            Authorization : `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n    })\n    return reqInstance.post(basePath + `/add`, stoObj);\n}\n\n\n\nexport const getAll = () => {\n    return axios.get(basePath + '/all');\n}\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,MAAMC,MAAM,GAAG,iEAAiE;AAEhF,MAAMC,QAAQ,GAAI,WAAUD,MAAO,QAAO;AAE1C,OAAO,MAAME,MAAM,GAAIC,GAAG,IAAK;EAC3BJ,KAAK,CAACK,MAAM,CAACH,QAAQ,GAAG,OAAO,GAAGE,GAAG,CAAC;AAC1C,CAAC;AAED,OAAO,MAAME,QAAQ,GAAIC,MAAM,IAAK;EAChC,IAAIC,WAAW,GAAGR,KAAK,CAACS,MAAM,CAAC;IAC3BC,OAAO,EAAE;MACLC,aAAa,EAAI,UAASC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE;IACnE;EACJ,CAAC,CAAC;EACF,OAAOL,WAAW,CAACM,IAAI,CAACZ,QAAQ,GAAI,MAAK,EAAEK,MAAM,CAAC;AACtD,CAAC;AAID,OAAO,MAAMQ,MAAM,GAAG,MAAM;EACxB,OAAOf,KAAK,CAACgB,GAAG,CAACd,QAAQ,GAAG,MAAM,CAAC;AACvC,CAAC"},"metadata":{},"sourceType":"module"}