{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/Projects/diet-planner/src/components/UserPanel.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  protein: 27,\n  calories: 100\n}, {\n  id: 2,\n  value: 'eggs',\n  protein: 13,\n  calories: 100\n}, {\n  id: 3,\n  value: 'cheese piątnica semi-fat',\n  protein: 16,\n  calories: 100\n}, {\n  id: 4,\n  value: 'peanut butter',\n  protein: 23.78,\n  calories: 100\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.protein / 100;\n      this.setState({\n        foods: [...this.state.foods, {\n          id: this.state.id + 1,\n          name: this.state.name,\n          protein: proteinPerFood\n        }],\n        name: '',\n        protein: 0,\n        weight: 0,\n        id: this.state.id + 1,\n        total: this.state.total + proteinPerFood\n      });\n    };\n    this.state = {\n      weight: 0,\n      protein: 0,\n      total: 0,\n      id: 0,\n      name: '',\n      foods: []\n    };\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n    this.handleProteinChange = this.handleProteinChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCaloriesChange = this.handleCaloriesChange.bind(this);\n  }\n  handleWeightChange(e) {\n    this.setState({\n      weight: e.target.value\n    });\n  }\n  handleProteinChange(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n  handleCaloriesChange(e) {\n    this.setState({\n      calories: e.target.value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value === n);\n    if (obj) {\n      this.setState({\n        protein: obj.protein\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Protein \", Math.round(this.state.total * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"food:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"productName\",\n        children: options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"weight (grams):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleWeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"protein/100g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"protein\",\n        value: this.state.protein,\n        onChange: this.handleProteinChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"calories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"calories\",\n        value: this.state.calories,\n        onChange: this.handleCaloriesChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"food: \", food.name, \" protein: \", food.protein, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","options","id","value","protein","calories","UserPanel","Component","constructor","props","addObjectToArray","e","preventDefault","proteinPerFood","state","weight","setState","foods","name","total","handleWeightChange","bind","handleProteinChange","handleNameChange","handleCaloriesChange","target","n","obj","find","o","render","Math","round","map","option","food"],"sources":["/home/bartekj/Projects/diet-planner/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\n\nconst options = [\n    { id: 1, value: 'chicken', protein: 27, calories: 100 },\n    { id: 2, value: 'eggs', protein: 13, calories: 100 },\n    { id: 3, value: 'cheese piątnica semi-fat', protein: 16, calories: 100 },\n    { id: 4, value: 'peanut butter', protein: 23.78, calories: 100 }\n]\n\nclass UserPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: 0,\n            protein: 0,\n            total: 0,\n            id: 0,\n            name: '',\n            foods: []\n        };\n        this.handleWeightChange = this.handleWeightChange.bind(this);\n        this.handleProteinChange = this.handleProteinChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleCaloriesChange = this.handleCaloriesChange.bind(this);\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n        let proteinPerFood = (this.state.weight * this.state.protein) / 100\n        this.setState({\n            foods: [\n                ...this.state.foods,\n                { id: this.state.id + 1, name: this.state.name, protein: proteinPerFood }\n            ],\n            name: '',\n            protein: 0,\n            weight: 0,\n            id: this.state.id + 1,\n            total: this.state.total + proteinPerFood\n        })\n    };\n\n    handleWeightChange(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    handleProteinChange(e) {\n        this.setState({\n            protein: e.target.value\n        });\n    }\n\n    handleCaloriesChange(e) {\n        this.setState({\n            calories: e.target.value\n        });\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value === n);\n        if (obj) {\n            this.setState({\n                protein: obj.protein\n            });\n        }\n    }\n\n    render() {\n        return <>\n            <h2>Total Protein {Math.round(this.state.total * 100) / 100}g</h2>\n\n            <label>food:</label>\n            <input\n                id=\"multiselect\"\n                type=\"text\"\n                name=\"\"\n                list=\"productName\"\n                onChange={this.handleNameChange}\n                value={this.state.name} />\n            <datalist id=\"productName\">\n                {options.map(option => {\n                    return (\n                        <option key={option.id} value={option.value}>{option.value}</option>\n                    );\n                })}\n            </datalist>\n            <label>weight (grams):</label>\n            <input\n                name=\"weight\"\n                value={this.state.weight}\n                onChange={this.handleWeightChange} />\n            <label>protein/100g:</label>\n            <input\n                name=\"protein\"\n                value={this.state.protein}\n                onChange={this.handleProteinChange} />\n            <label>calories</label>\n            <input\n                name=\"calories\"\n                value={this.state.calories}\n                onChange={this.handleCaloriesChange} />\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <p>food: {food.name} protein: {food.protein}g</p>\n                        <hr />\n                    </div>\n                );\n            })}\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n        </>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}