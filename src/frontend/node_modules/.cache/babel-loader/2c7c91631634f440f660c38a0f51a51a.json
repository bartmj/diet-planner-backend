{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\n\n// const options = [\n//     { id: 1, value: 'chicken', proteinPer100g: 27, kcalPer100g: 239, fatsPer100g: 1 },\n//     { id: 2, value: 'eggs', proteinPer100g: 13, kcalPer100g: 155.1, fatsPer100g: 1 },\n//     { id: 3, value: 'cheese piÄ…tnica semi-fat', proteinPer100g: 16, kcalPer100g: 485, fatsPer100g: 1 },\n//     { id: 4, value: 'peanut butter', proteinPer100g: 23.78, kcalPer100g: 642, fatsPer100g: 1 },\n//     { id: 5, value: 'oats', proteinPer100g: 14, kcalPer100g: 418, fatsPer100g: 1 },\n//     { id: 6, value: 'walnut', proteinPer100g: 15, kcalPer100g: 654.4, fatsPer100g: 1 },\n//     { id: 7, value: 'dark bread', proteinPer100g: 8.5, kcalPer100g: 218, fatsPer100g: 1 },\n//     { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, kcalPer100g: 369, fatsPer100g: 1 },\n//     { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, kcalPer100g: 373, fatsPer100g: 1 },\n//     { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, kcalPer100g: 131, fatsPer100g: 1 }\n// ]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.proteinPer100g / 100;\n      let kcalPerFood = this.state.weight * this.state.kcalPer100g / 100;\n      let fatsPerFood = this.state.weight * this.state.fatsPer100g / 100;\n      let dtoObj = {\n        id: null,\n        name: this.state.name,\n        weight: this.state.weight,\n        proteinPer100g: this.state.proteinPer100g,\n        fatsPer100g: this.state.fatsPer100g,\n        kcalPer100g: this.state.kcalPer100g,\n        proteinTotal: proteinPerFood,\n        fatsTotal: fatsPerFood,\n        kcalTotal: kcalPerFood,\n        userId: store.getState().auth.user.id,\n        ifFavourite: this.state.ifFavourite\n      };\n      apiCalls.saveFood(dtoObj).then(response => {\n        const {\n          id\n        } = response.data;\n        this.setState({\n          foods: [...this.state.foods, {\n            id: id,\n            name: this.state.name,\n            proteinTotal: proteinPerFood,\n            kcalTotal: kcalPerFood,\n            totalFats: fatsPerFood\n          }],\n          name: '',\n          weight: 0,\n          proteinPer100g: 0,\n          fatsPer100g: 0,\n          kcalPer100g: 0,\n          totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n          totalDayFats: this.state.totalDayFats + fatsPerFood,\n          totalDayKcal: this.state.totalDayKcal + kcalPerFood,\n          ifFavourite: false\n        });\n      });\n    };\n    this.removeObject = val => {\n      let obj = this.state.foods.find(o => o.id === val);\n      this.setState({\n        foods: this.state.foods.filter(obj => {\n          return obj.id !== val;\n        }),\n        totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n        totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n      });\n      apiCalls.remove(val);\n    };\n    this.loadFoods = () => {\n      apiCalls.getAll().then(response => {\n        this.setState({\n          foods: response.data\n        });\n        let totalDayProtein = 0,\n          totalDayFats = 0,\n          totalDayKcal = 0;\n        for (const element of response.data) {\n          totalDayProtein = totalDayProtein + element.proteinTotal;\n          totalDayFats = totalDayFats + element.fatsTotal;\n          totalDayKcal = totalDayKcal + element.kcalTotal;\n        }\n        this.setState({\n          totalDayProtein: totalDayProtein,\n          totalDayFats: totalDayFats,\n          totalDayKcal: totalDayKcal\n        });\n      });\n    };\n    this.state = {\n      name: '',\n      weight: 0,\n      proteinPer100g: 0,\n      fatsPer100g: 0,\n      kcalPer100g: 0,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayKcal: 0,\n      foods: [],\n      ifFavourite: false,\n      options: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n  }\n  componentDidMount() {\n    this.loadFoods();\n    apiCalls.getFavourites().then(res => {\n      console.log(res.data);\n    });\n  }\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = this.state.options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    if (obj) {\n      this.setState({\n        proteinPer100g: obj.proteinPer100g,\n        kcalPer100g: obj.kcalPer100g,\n        fatsPer100g: obj.fatsPer100g\n      });\n    }\n  }\n  handleCheckBoxChange() {\n    let bool = this.state.ifFavourite === false;\n    this.setState({\n      ifFavourite: bool\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Macro calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"food: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"multiselect\",\n          type: \"text\",\n          name: \"\",\n          list: \"productName\",\n          onChange: this.handleNameChange,\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"productName\",\n          children: this.state.options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.name,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"weight (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"weight\",\n          value: this.state.weight,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"protein/100g: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"proteinPer100g\",\n          value: this.state.proteinPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"fats/100g: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"fatsPer100g\",\n          value: this.state.fatsPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"calories/100g: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"kcalPer100g\",\n          value: this.state.kcalPer100g,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-01\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: this.addObjectToArray,\n          children: \"Add food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"ifFavourite\",\n            name: \"ifFavourite\",\n            checked: this.state.ifFavourite ? 'checked' : '',\n            onChange: this.handleCheckBoxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ifFavourite\",\n            children: \"Add to favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalDayKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.totalDayProtein * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"food: \", food.name, \", protein: \", Math.round(food.proteinTotal * 100) / 100, \"g, calories: \", Math.round(food.kcalTotal * 100) / 100, \"kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeObject(food.id),\n                type: \"button\",\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","apiCalls","store","UserPanel","Component","constructor","props","state","getState","addObjectToArray","e","preventDefault","proteinPerFood","weight","proteinPer100g","kcalPerFood","kcalPer100g","fatsPerFood","fatsPer100g","dtoObj","id","name","proteinTotal","fatsTotal","kcalTotal","userId","auth","user","ifFavourite","saveFood","then","response","data","setState","foods","totalFats","totalDayProtein","totalDayFats","totalDayKcal","removeObject","val","obj","find","o","filter","remove","loadFoods","getAll","element","options","handleChange","bind","handleNameChange","handleCheckBoxChange","componentDidMount","getFavourites","res","console","log","value","target","n","toLowerCase","bool","render","map","option","Math","round","food"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport store from '../store';\n\n// const options = [\n//     { id: 1, value: 'chicken', proteinPer100g: 27, kcalPer100g: 239, fatsPer100g: 1 },\n//     { id: 2, value: 'eggs', proteinPer100g: 13, kcalPer100g: 155.1, fatsPer100g: 1 },\n//     { id: 3, value: 'cheese piÄ…tnica semi-fat', proteinPer100g: 16, kcalPer100g: 485, fatsPer100g: 1 },\n//     { id: 4, value: 'peanut butter', proteinPer100g: 23.78, kcalPer100g: 642, fatsPer100g: 1 },\n//     { id: 5, value: 'oats', proteinPer100g: 14, kcalPer100g: 418, fatsPer100g: 1 },\n//     { id: 6, value: 'walnut', proteinPer100g: 15, kcalPer100g: 654.4, fatsPer100g: 1 },\n//     { id: 7, value: 'dark bread', proteinPer100g: 8.5, kcalPer100g: 218, fatsPer100g: 1 },\n//     { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, kcalPer100g: 369, fatsPer100g: 1 },\n//     { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, kcalPer100g: 373, fatsPer100g: 1 },\n//     { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, kcalPer100g: 131, fatsPer100g: 1 }\n// ]\n\nclass UserPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayKcal: 0,\n            foods: [],\n            ifFavourite: false,\n            options: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n\n    }\n\n    state = store.getState();\n\n    componentDidMount() {\n        this.loadFoods();\n        apiCalls.getFavourites().then((res) => {\n            console.log(res.data)\n        })\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let kcalPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n\n        let dtoObj = {\n            id: null,\n            name: this.state.name,\n            weight: this.state.weight,\n            proteinPer100g: this.state.proteinPer100g,\n            fatsPer100g: this.state.fatsPer100g,\n            kcalPer100g: this.state.kcalPer100g,\n            proteinTotal: proteinPerFood,\n            fatsTotal: fatsPerFood,\n            kcalTotal: kcalPerFood,\n            userId: store.getState().auth.user.id,\n            ifFavourite: this.state.ifFavourite\n        }\n\n        apiCalls.saveFood(dtoObj).then(response => {\n\n            const { id } = response.data;\n\n            this.setState({\n                foods: [\n                    ...this.state.foods,\n                    { id: id, name: this.state.name, proteinTotal: proteinPerFood, kcalTotal: kcalPerFood, totalFats: fatsPerFood }\n                ],\n                name: '',\n                weight: 0,\n                proteinPer100g: 0,\n                fatsPer100g: 0,\n                kcalPer100g: 0,\n                totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n                totalDayFats: this.state.totalDayFats + fatsPerFood,\n                totalDayKcal: this.state.totalDayKcal + kcalPerFood,\n                ifFavourite: false\n            })\n        })\n    };\n\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                return obj.id !== val;\n            }),\n            totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n            totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n        })\n        apiCalls.remove(val)\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    loadFoods = () => {\n        apiCalls.getAll().then(response => {\n            this.setState({\n                foods: response.data\n            })\n            let totalDayProtein = 0, totalDayFats = 0, totalDayKcal = 0\n            for (const element of response.data) {\n                totalDayProtein = totalDayProtein + element.proteinTotal\n                totalDayFats = totalDayFats + element.fatsTotal\n                totalDayKcal = totalDayKcal + element.kcalTotal\n            }\n            this.setState({\n                totalDayProtein: totalDayProtein,\n                totalDayFats: totalDayFats,\n                totalDayKcal: totalDayKcal\n            })\n        })\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = this.state.options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                proteinPer100g: obj.proteinPer100g,\n                kcalPer100g: obj.kcalPer100g,\n                fatsPer100g: obj.fatsPer100g\n            });\n        }\n    }\n\n    handleCheckBoxChange() {\n        let bool = this.state.ifFavourite === false\n        this.setState({\n            ifFavourite: bool\n        })\n    }\n\n    render() {\n        return <div className=\"container\">\n            <h1>Macro calculator</h1>\n\n            <div className=\"form-group\">\n                <label>food: </label>\n                <input\n                    id=\"multiselect\"\n                    type=\"text\"\n                    name=\"\"\n                    list=\"productName\"\n                    onChange={this.handleNameChange}\n                    value={this.state.name}\n                />\n\n                <datalist id=\"productName\">\n                    {this.state.options.map(option => {\n                        return (\n                            <option key={option.id} value={option.name}>{option.name}</option>\n                        );\n                    })}\n                </datalist>\n            </div>\n\n            <div className=\"form-group\">\n                <label>weight (grams):</label>\n                <input\n                    name=\"weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>protein/100g: </label>\n                <input\n                    name=\"proteinPer100g\"\n                    value={this.state.proteinPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>fats/100g: </label>\n                <input\n                    name=\"fatsPer100g\"\n                    value={this.state.fatsPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>calories/100g: </label>\n                <input\n                    name=\"kcalPer100g\"\n                    value={this.state.kcalPer100g}\n                    onChange={this.handleChange} />\n            </div>\n\n            <div className=\"flex-01\">\n                <button\n                    className=\"add-button\"\n                    onClick={this.addObjectToArray}>\n                    Add food\n                </button>\n\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        id=\"ifFavourite\"\n                        name=\"ifFavourite\"\n                        checked={this.state.ifFavourite ? 'checked' : ''}\n                        onChange={this.handleCheckBoxChange}/>\n                    <label htmlFor=\"ifFavourite\">Add to favourites</label>\n                </div>\n            </div>\n\n            <h3>Today:</h3>\n            <h3>Total calories {Math.round(this.state.totalDayKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.totalDayProtein * 100) / 100}g</h3>\n\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <div className=\"flex\">\n                            <div>\n                                <p>food: {food.name},\n                                    protein: {Math.round(food.proteinTotal * 100) / 100}g, calories: {Math.round(food.kcalTotal * 100) / 100}kcal</p>\n                            </div>\n                            <div className=\"x-btn\">\n                                <button\n                                    onClick={() => this.removeObject(food.id)}\n                                    type=\"button\">\n                                    x\n                                </button>\n                            </div>\n                        </div>\n                        <hr />\n                    </div>\n                );\n            })}\n        </div>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,UAAU;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,SAAS,SAASH,KAAK,CAACI,SAAS,CAAC;EACpCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAqBjBC,KAAK,GAAGL,KAAK,CAACM,QAAQ,EAAE;IAAA,KASxBC,gBAAgB,GAAGC,CAAC,IAAI;MACpBA,CAAC,CAACC,cAAc,EAAE;MAElB,IAAIC,cAAc,GAAI,IAAI,CAACL,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACO,cAAc,GAAI,GAAG;MAC1E,IAAIC,WAAW,GAAI,IAAI,CAACR,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACS,WAAW,GAAI,GAAG;MACpE,IAAIC,WAAW,GAAI,IAAI,CAACV,KAAK,CAACM,MAAM,GAAG,IAAI,CAACN,KAAK,CAACW,WAAW,GAAI,GAAG;MAEpE,IAAIC,MAAM,GAAG;QACTC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,IAAI,CAACd,KAAK,CAACc,IAAI;QACrBR,MAAM,EAAE,IAAI,CAACN,KAAK,CAACM,MAAM;QACzBC,cAAc,EAAE,IAAI,CAACP,KAAK,CAACO,cAAc;QACzCI,WAAW,EAAE,IAAI,CAACX,KAAK,CAACW,WAAW;QACnCF,WAAW,EAAE,IAAI,CAACT,KAAK,CAACS,WAAW;QACnCM,YAAY,EAAEV,cAAc;QAC5BW,SAAS,EAAEN,WAAW;QACtBO,SAAS,EAAET,WAAW;QACtBU,MAAM,EAAEvB,KAAK,CAACM,QAAQ,EAAE,CAACkB,IAAI,CAACC,IAAI,CAACP,EAAE;QACrCQ,WAAW,EAAE,IAAI,CAACrB,KAAK,CAACqB;MAC5B,CAAC;MAED3B,QAAQ,CAAC4B,QAAQ,CAACV,MAAM,CAAC,CAACW,IAAI,CAACC,QAAQ,IAAI;QAEvC,MAAM;UAAEX;QAAG,CAAC,GAAGW,QAAQ,CAACC,IAAI;QAE5B,IAAI,CAACC,QAAQ,CAAC;UACVC,KAAK,EAAE,CACH,GAAG,IAAI,CAAC3B,KAAK,CAAC2B,KAAK,EACnB;YAAEd,EAAE,EAAEA,EAAE;YAAEC,IAAI,EAAE,IAAI,CAACd,KAAK,CAACc,IAAI;YAAEC,YAAY,EAAEV,cAAc;YAAEY,SAAS,EAAET,WAAW;YAAEoB,SAAS,EAAElB;UAAY,CAAC,CAClH;UACDI,IAAI,EAAE,EAAE;UACRR,MAAM,EAAE,CAAC;UACTC,cAAc,EAAE,CAAC;UACjBI,WAAW,EAAE,CAAC;UACdF,WAAW,EAAE,CAAC;UACdoB,eAAe,EAAE,IAAI,CAAC7B,KAAK,CAAC6B,eAAe,GAAGxB,cAAc;UAC5DyB,YAAY,EAAE,IAAI,CAAC9B,KAAK,CAAC8B,YAAY,GAAGpB,WAAW;UACnDqB,YAAY,EAAE,IAAI,CAAC/B,KAAK,CAAC+B,YAAY,GAAGvB,WAAW;UACnDa,WAAW,EAAE;QACjB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAAA,KAGDW,YAAY,GAAGC,GAAG,IAAI;MAClB,IAAIC,GAAG,GAAG,IAAI,CAAClC,KAAK,CAAC2B,KAAK,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKoB,GAAG,CAAC;MAClD,IAAI,CAACP,QAAQ,CAAC;QACVC,KAAK,EAAE,IAAI,CAAC3B,KAAK,CAAC2B,KAAK,CAACU,MAAM,CAACH,GAAG,IAAI;UAClC,OAAOA,GAAG,CAACrB,EAAE,KAAKoB,GAAG;QACzB,CAAC,CAAC;QACFJ,eAAe,EAAE,IAAI,CAAC7B,KAAK,CAAC6B,eAAe,GAAGK,GAAG,CAACnB,YAAY;QAC9DgB,YAAY,EAAE,IAAI,CAAC/B,KAAK,CAAC+B,YAAY,GAAGG,GAAG,CAACjB;MAChD,CAAC,CAAC;MACFvB,QAAQ,CAAC4C,MAAM,CAACL,GAAG,CAAC;IACxB,CAAC;IAAA,KASDM,SAAS,GAAG,MAAM;MACd7C,QAAQ,CAAC8C,MAAM,EAAE,CAACjB,IAAI,CAACC,QAAQ,IAAI;QAC/B,IAAI,CAACE,QAAQ,CAAC;UACVC,KAAK,EAAEH,QAAQ,CAACC;QACpB,CAAC,CAAC;QACF,IAAII,eAAe,GAAG,CAAC;UAAEC,YAAY,GAAG,CAAC;UAAEC,YAAY,GAAG,CAAC;QAC3D,KAAK,MAAMU,OAAO,IAAIjB,QAAQ,CAACC,IAAI,EAAE;UACjCI,eAAe,GAAGA,eAAe,GAAGY,OAAO,CAAC1B,YAAY;UACxDe,YAAY,GAAGA,YAAY,GAAGW,OAAO,CAACzB,SAAS;UAC/Ce,YAAY,GAAGA,YAAY,GAAGU,OAAO,CAACxB,SAAS;QACnD;QACA,IAAI,CAACS,QAAQ,CAAC;UACVG,eAAe,EAAEA,eAAe;UAChCC,YAAY,EAAEA,YAAY;UAC1BC,YAAY,EAAEA;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IA5GG,IAAI,CAAC/B,KAAK,GAAG;MACTc,IAAI,EAAE,EAAE;MACRR,MAAM,EAAE,CAAC;MACTC,cAAc,EAAE,CAAC;MACjBI,WAAW,EAAE,CAAC;MACdF,WAAW,EAAE,CAAC;MACdoB,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,CAAC;MACfJ,KAAK,EAAE,EAAE;MACTN,WAAW,EAAE,KAAK;MAClBqB,OAAO,EAAE;IACb,CAAC;IACD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;EAEpE;EAIAG,iBAAiB,GAAG;IAChB,IAAI,CAACR,SAAS,EAAE;IAChB7C,QAAQ,CAACsD,aAAa,EAAE,CAACzB,IAAI,CAAE0B,GAAG,IAAK;MACnCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACxB,IAAI,CAAC;IACzB,CAAC,CAAC;EACN;EA0DAkB,YAAY,CAACxC,CAAC,EAAE;IACZ,MAAMiD,KAAK,GAAGjD,CAAC,CAACkD,MAAM,CAACD,KAAK;IAC5B,IAAI,CAAC1B,QAAQ,CAAC;MACV,CAACvB,CAAC,CAACkD,MAAM,CAACvC,IAAI,GAAGsC;IACrB,CAAC,CAAC;EACN;EAqBAP,gBAAgB,CAAC1C,CAAC,EAAE;IAChB,IAAImD,CAAC,GAAGnD,CAAC,CAACkD,MAAM,CAACD,KAAK;IACtB,IAAI,CAAC1B,QAAQ,CAAC;MACVZ,IAAI,EAAEwC;IACV,CAAC,CAAC;IACF,IAAIpB,GAAG,GAAG,IAAI,CAAClC,KAAK,CAAC0C,OAAO,CAACP,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACgB,KAAK,CAACG,WAAW,EAAE,KAAKD,CAAC,CAACC,WAAW,EAAE,CAAC;IACjF,IAAIrB,GAAG,EAAE;MACL,IAAI,CAACR,QAAQ,CAAC;QACVnB,cAAc,EAAE2B,GAAG,CAAC3B,cAAc;QAClCE,WAAW,EAAEyB,GAAG,CAACzB,WAAW;QAC5BE,WAAW,EAAEuB,GAAG,CAACvB;MACrB,CAAC,CAAC;IACN;EACJ;EAEAmC,oBAAoB,GAAG;IACnB,IAAIU,IAAI,GAAG,IAAI,CAACxD,KAAK,CAACqB,WAAW,KAAK,KAAK;IAC3C,IAAI,CAACK,QAAQ,CAAC;MACVL,WAAW,EAAEmC;IACjB,CAAC,CAAC;EACN;EAEAC,MAAM,GAAG;IACL,oBAAO;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eAEzB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACrB;UACI,EAAE,EAAC,aAAa;UAChB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,EAAE;UACP,IAAI,EAAC,aAAa;UAClB,QAAQ,EAAE,IAAI,CAACZ,gBAAiB;UAChC,KAAK,EAAE,IAAI,CAAC7C,KAAK,CAACc;QAAK;UAAA;UAAA;UAAA;QAAA,QACzB,eAEF;UAAU,EAAE,EAAC,aAAa;UAAA,UACrB,IAAI,CAACd,KAAK,CAAC0C,OAAO,CAACgB,GAAG,CAACC,MAAM,IAAI;YAC9B,oBACI;cAAwB,KAAK,EAAEA,MAAM,CAAC7C,IAAK;cAAA,UAAE6C,MAAM,CAAC7C;YAAI,GAA3C6C,MAAM,CAAC9C,EAAE;cAAA;cAAA;cAAA;YAAA,QAA4C;UAE1E,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA8B,eAC9B;UACI,IAAI,EAAC,QAAQ;UACb,KAAK,EAAE,IAAI,CAACb,KAAK,CAACM,MAAO;UACzB,QAAQ,EAAE,IAAI,CAACqC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA6B,eAC7B;UACI,IAAI,EAAC,gBAAgB;UACrB,KAAK,EAAE,IAAI,CAAC3C,KAAK,CAACO,cAAe;UACjC,QAAQ,EAAE,IAAI,CAACoC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B,eAC1B;UACI,IAAI,EAAC,aAAa;UAClB,KAAK,EAAE,IAAI,CAAC3C,KAAK,CAACW,WAAY;UAC9B,QAAQ,EAAE,IAAI,CAACgC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA8B,eAC9B;UACI,IAAI,EAAC,aAAa;UAClB,KAAK,EAAE,IAAI,CAAC3C,KAAK,CAACS,WAAY;UAC9B,QAAQ,EAAE,IAAI,CAACkC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eAEN;QAAK,SAAS,EAAC,SAAS;QAAA,wBACpB;UACI,SAAS,EAAC,YAAY;UACtB,OAAO,EAAE,IAAI,CAACzC,gBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE1B,eAET;UAAA,wBACI;YACI,IAAI,EAAC,UAAU;YACf,EAAE,EAAC,aAAa;YAChB,IAAI,EAAC,aAAa;YAClB,OAAO,EAAE,IAAI,CAACF,KAAK,CAACqB,WAAW,GAAG,SAAS,GAAG,EAAG;YACjD,QAAQ,EAAE,IAAI,CAACyB;UAAqB;YAAA;YAAA;YAAA;UAAA,QAAE,eAC1C;YAAO,OAAO,EAAC,aAAa;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA0B;QAAA;UAAA;UAAA;UAAA;QAAA,QACpD;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACf;QAAA,8BAAoBc,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC7D,KAAK,CAAC+B,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eAC7E;QAAA,6BAAmB6B,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC7D,KAAK,CAAC6B,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,EAE3E,IAAI,CAAC7B,KAAK,CAAC2B,KAAK,CAAC+B,GAAG,CAACI,IAAI,IAAI;QAC1B,oBACI;UAAA,wBACI;YAAK,SAAS,EAAC,MAAM;YAAA,wBACjB;cAAA,uBACI;gBAAA,qBAAUA,IAAI,CAAChD,IAAI,iBACL8C,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC/C,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,mBAAe6C,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC7C,SAAS,GAAG,GAAG,CAAC,GAAG,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAS;cAAA;cAAA;cAAA;YAAA,QACnH,eACN;cAAK,SAAS,EAAC,OAAO;cAAA,uBAClB;gBACI,OAAO,EAAE,MAAM,IAAI,CAACe,YAAY,CAAC8B,IAAI,CAACjD,EAAE,CAAE;gBAC1C,IAAI,EAAC,QAAQ;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAER;cAAA;cAAA;cAAA;YAAA,QACP;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ,eACN;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAdAiD,IAAI,CAACjD,EAAE;UAAA;UAAA;UAAA;QAAA,QAeX;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EACV;AACJ;AAEA,eAAejB,SAAS"},"metadata":{},"sourceType":"module"}