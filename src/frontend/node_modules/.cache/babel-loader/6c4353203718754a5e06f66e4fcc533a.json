{"ast":null,"code":"var _jsxFileName = \"/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 1,\n  value: 'chicken',\n  proteinPer100g: 27,\n  kcalPer100g: 239,\n  fatsPer100g: 1\n}, {\n  id: 2,\n  value: 'eggs',\n  proteinPer100g: 13,\n  kcalPer100g: 155.1,\n  fatsPer100g: 1\n}, {\n  id: 3,\n  value: 'cheese piÄ…tnica semi-fat',\n  proteinPer100g: 16,\n  kcalPer100g: 485,\n  fatsPer100g: 1\n}, {\n  id: 4,\n  value: 'peanut butter',\n  proteinPer100g: 23.78,\n  kcalPer100g: 642,\n  fatsPer100g: 1\n}, {\n  id: 5,\n  value: 'oats',\n  proteinPer100g: 14,\n  kcalPer100g: 418,\n  fatsPer100g: 1\n}, {\n  id: 6,\n  value: 'walnut',\n  proteinPer100g: 15,\n  kcalPer100g: 654.4,\n  fatsPer100g: 1\n}, {\n  id: 7,\n  value: 'dark bread',\n  proteinPer100g: 8.5,\n  kcalPer100g: 218,\n  fatsPer100g: 1\n}, {\n  id: 8,\n  value: 'protein bar Olymp 64 g',\n  proteinPer100g: 31,\n  kcalPer100g: 369,\n  fatsPer100g: 1\n}, {\n  id: 9,\n  value: 'WPI 90 Olymp',\n  proteinPer100g: 90,\n  kcalPer100g: 373,\n  fatsPer100g: 1\n}, {\n  id: 10,\n  value: 'wheat noodles, cooked',\n  proteinPer100g: 5.15,\n  kcalPer100g: 131,\n  fatsPer100g: 1\n}];\nclass UserPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addObjectToArray = e => {\n      e.preventDefault();\n      let proteinPerFood = this.state.weight * this.state.proteinPer100g / 100;\n      let kcalPerFood = this.state.weight * this.state.kcalPer100g / 100;\n      let fatsPerFood = this.state.weight * this.state.fatsPer100g / 100;\n      this.setState({\n        foods: [...this.state.foods, {\n          id: this.state.id + 1,\n          name: this.state.name,\n          proteinTotal: proteinPerFood,\n          kcalTotal: kcalPerFood,\n          totalFats: fatsPerFood\n        }],\n        id: this.state.id + 1,\n        name: '',\n        proteinTotal: proteinPerFood,\n        kcalTotal: kcalPerFood,\n        totalFats: fatsPerFood,\n        totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n        totalDayFats: this.state.totalDayFats + fatsPerFood,\n        totalDayKcal: this.state.totalDayKcal + kcalPerFood\n      });\n      let dtoObj = {\n        id: this.state.id,\n        name: this.state.name,\n        weight: this.state.weight,\n        proteinPer100g: this.state.proteinPer100g,\n        fatsPer100g: this.state.fatsPer100g,\n        kcalPer100g: this.state.kcalPer100g,\n        proteinTotal: proteinPerFood,\n        fatsTotal: fatsPerFood,\n        kcalTotal: kcalPerFood\n      };\n      apiCalls.saveFood(dtoObj);\n      this.setState({\n        weight: 0,\n        proteinPer100g: 0,\n        fatsPer100g: 0,\n        kcalPer100g: 0\n      });\n    };\n    this.removeObject = val => {\n      let obj = this.state.foods.find(o => o.id === val);\n      this.setState({\n        foods: this.state.foods.filter(obj => {\n          return obj.id !== val;\n        }),\n        totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n        totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n      });\n    };\n    this.loadFoods = () => {\n      apiCalls.getAll().then(response => {\n        // console.log(response.data)\n        this.setState({\n          foods: response.data\n        });\n        let totalDayProtein = 0;\n        for (const element of response.data) {\n          // console.log(element)\n          totalDayProtein = +element.proteinTotal;\n          let totalDayFats = +element.proteinTotal;\n          let totalDayKcal = +element.proteinTotal;\n\n          // this.setState({\n          //     totalDayProtein: this.state.totalDayProtein + element.proteinTotal,\n          //     totalDayFats: this.state.totalDayFats + element.totalFats,\n          //     totalDayKcal: this.state.totalDayKcal + element.kcalTotal\n          // })\n        }\n\n        console.log(totalDayProtein);\n      });\n      // console.log(this.state.foods)\n    };\n    this.state = {\n      id: 0,\n      name: '',\n      weight: 0,\n      proteinPer100g: 0,\n      fatsPer100g: 0,\n      kcalPer100g: 0,\n      proteinTotal: 0,\n      totalFats: 0,\n      kcalTotal: 0,\n      totalDayProtein: 0,\n      totalDayFats: 0,\n      totalDayKcal: 0,\n      foods: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  componentDidMount() {\n    console.log('page loaded');\n    this.loadFoods();\n    // console.log(this.state.foods);\n    for (const element of this.state.foods) {\n      this.setState({\n        totalDayProtein: this.state.totalDayProtein + element.proteinTotal,\n        totalDayFats: this.state.totalDayFats + element.totalFats,\n        totalDayKcal: this.state.totalDayKcal + element.kcalTotal\n      });\n      // element.totalFats\n      // element.kcalTotal\n      // element.proteinTotal\n      //\n      // totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n      //     totalDayFats: this.state.totalDayFats + fatsPerFood,\n      //     totalDayKcal: this.state.totalDayKcal + kcalPerFood\n    }\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n  handleNameChange(e) {\n    let n = e.target.value;\n    this.setState({\n      name: n\n    });\n    let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n    if (obj) {\n      this.setState({\n        proteinPer100g: obj.proteinPer100g,\n        kcalPer100g: obj.kcalPer100g,\n        fatsPer100g: obj.fatsPer100g\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total calories \", Math.round(this.state.totalDayKcal * 100) / 100, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total protein \", Math.round(this.state.totalDayProtein * 100) / 100, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"food:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"multiselect\",\n        type: \"text\",\n        name: \"\",\n        list: \"productName\",\n        onChange: this.handleNameChange,\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"productName\",\n        children: options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"weight (grams):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        value: this.state.weight,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"protein/100g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"proteinPer100g\",\n        value: this.state.proteinPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"fats/100g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"fatsPer100g\",\n        value: this.state.fatsPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"calories/100g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"kcalPer100g\",\n        value: this.state.kcalPer100g,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), this.state.foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"food: \", food.name, \", protein: \", Math.round(food.proteinTotal * 100) / 100, \"g, calories: \", Math.round(food.kcalTotal * 100) / 100, \"kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removeObject(food.id),\n            type: \"button\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: this.addObjectToArray,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default UserPanel;","map":{"version":3,"names":["React","apiCalls","options","id","value","proteinPer100g","kcalPer100g","fatsPer100g","UserPanel","Component","constructor","props","addObjectToArray","e","preventDefault","proteinPerFood","state","weight","kcalPerFood","fatsPerFood","setState","foods","name","proteinTotal","kcalTotal","totalFats","totalDayProtein","totalDayFats","totalDayKcal","dtoObj","fatsTotal","saveFood","removeObject","val","obj","find","o","filter","loadFoods","getAll","then","response","data","element","console","log","handleChange","bind","handleNameChange","componentDidMount","target","n","toLowerCase","render","Math","round","map","option","food"],"sources":["/home/bartekj/diet-planner/src/frontend/src/components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport * as apiCalls from '../api/apiCalls';\n\nconst options = [\n    { id: 1, value: 'chicken', proteinPer100g: 27, kcalPer100g: 239, fatsPer100g: 1 },\n    { id: 2, value: 'eggs', proteinPer100g: 13, kcalPer100g: 155.1, fatsPer100g: 1 },\n    { id: 3, value: 'cheese piÄ…tnica semi-fat', proteinPer100g: 16, kcalPer100g: 485, fatsPer100g: 1 },\n    { id: 4, value: 'peanut butter', proteinPer100g: 23.78, kcalPer100g: 642, fatsPer100g: 1 },\n    { id: 5, value: 'oats', proteinPer100g: 14, kcalPer100g: 418, fatsPer100g: 1 },\n    { id: 6, value: 'walnut', proteinPer100g: 15, kcalPer100g: 654.4, fatsPer100g: 1 },\n    { id: 7, value: 'dark bread', proteinPer100g: 8.5, kcalPer100g: 218, fatsPer100g: 1 },\n    { id: 8, value: 'protein bar Olymp 64 g', proteinPer100g: 31, kcalPer100g: 369, fatsPer100g: 1 },\n    { id: 9, value: 'WPI 90 Olymp', proteinPer100g: 90, kcalPer100g: 373, fatsPer100g: 1 },\n    { id: 10, value: 'wheat noodles, cooked', proteinPer100g: 5.15, kcalPer100g: 131, fatsPer100g: 1 }\n]\n\nclass UserPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 0,\n            name: '',\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n            proteinTotal: 0,\n            totalFats: 0,\n            kcalTotal: 0,\n            totalDayProtein: 0,\n            totalDayFats: 0,\n            totalDayKcal: 0,\n            foods: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        console.log('page loaded');\n        this.loadFoods();\n        // console.log(this.state.foods);\n        for (const element of this.state.foods) {\n            this.setState({\n                totalDayProtein: this.state.totalDayProtein + element.proteinTotal,\n                    totalDayFats: this.state.totalDayFats + element.totalFats,\n                    totalDayKcal: this.state.totalDayKcal + element.kcalTotal\n            })\n            // element.totalFats\n            // element.kcalTotal\n            // element.proteinTotal\n            //\n            // totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n            //     totalDayFats: this.state.totalDayFats + fatsPerFood,\n            //     totalDayKcal: this.state.totalDayKcal + kcalPerFood\n        }\n    }\n\n    addObjectToArray = e => {\n        e.preventDefault();\n        let proteinPerFood = (this.state.weight * this.state.proteinPer100g) / 100\n        let kcalPerFood = (this.state.weight * this.state.kcalPer100g) / 100\n        let fatsPerFood = (this.state.weight * this.state.fatsPer100g) / 100\n\n        this.setState({\n            foods: [\n                ...this.state.foods,\n                { id: this.state.id + 1, name: this.state.name, proteinTotal: proteinPerFood, kcalTotal: kcalPerFood, totalFats: fatsPerFood }\n            ],\n            id: this.state.id + 1,\n            name: '',\n            proteinTotal: proteinPerFood,\n            kcalTotal: kcalPerFood,\n            totalFats: fatsPerFood,\n            totalDayProtein: this.state.totalDayProtein + proteinPerFood,\n            totalDayFats: this.state.totalDayFats + fatsPerFood,\n            totalDayKcal: this.state.totalDayKcal + kcalPerFood\n        })\n\n        let dtoObj = {\n            id: this.state.id,\n            name: this.state.name,\n            weight: this.state.weight,\n            proteinPer100g: this.state.proteinPer100g,\n            fatsPer100g: this.state.fatsPer100g,\n            kcalPer100g: this.state.kcalPer100g,\n            proteinTotal: proteinPerFood,\n            fatsTotal: fatsPerFood,\n            kcalTotal: kcalPerFood\n        }\n\n        apiCalls.saveFood(dtoObj);\n\n        this.setState({\n            weight: 0,\n            proteinPer100g: 0,\n            fatsPer100g: 0,\n            kcalPer100g: 0,\n        })\n    };\n\n\n    removeObject = val => {\n        let obj = this.state.foods.find(o => o.id === val);\n        this.setState({\n            foods: this.state.foods.filter(obj => {\n                return obj.id !== val;\n            }),\n            totalDayProtein: this.state.totalDayProtein - obj.proteinTotal,\n            totalDayKcal: this.state.totalDayKcal - obj.kcalTotal\n\n        })\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        this.setState({\n            [e.target.name]: value\n        });\n    }\n\n    loadFoods = () => {\n        apiCalls.getAll().then(response => {\n            // console.log(response.data)\n            this.setState({\n                    foods: response.data\n                })\n            let totalDayProtein = 0\n            for (const element of response.data) {\n                // console.log(element)\n                totalDayProtein =+ element.proteinTotal\n                let totalDayFats =+ element.proteinTotal\n                let totalDayKcal =+ element.proteinTotal\n\n\n                // this.setState({\n                //     totalDayProtein: this.state.totalDayProtein + element.proteinTotal,\n                //     totalDayFats: this.state.totalDayFats + element.totalFats,\n                //     totalDayKcal: this.state.totalDayKcal + element.kcalTotal\n                // })\n            }\n            console.log(totalDayProtein)\n        })\n        // console.log(this.state.foods)\n\n    }\n\n    handleNameChange(e) {\n        let n = e.target.value\n        this.setState({\n            name: n\n        })\n        let obj = options.find(o => o.value.toLowerCase() === n.toLowerCase());\n        if (obj) {\n            this.setState({\n                proteinPer100g: obj.proteinPer100g,\n                kcalPer100g: obj.kcalPer100g,\n                fatsPer100g: obj.fatsPer100g\n            });\n        }\n    }\n\n    render() {\n        return <>\n            <h3>Total calories {Math.round(this.state.totalDayKcal * 100) / 100}kcal</h3>\n            <h3>Total protein {Math.round(this.state.totalDayProtein * 100) / 100}g</h3>\n\n            <label>food:</label>\n            <input\n                id=\"multiselect\"\n                type=\"text\"\n                name=\"\"\n                list=\"productName\"\n                onChange={this.handleNameChange}\n                value={this.state.name} />\n            <datalist id=\"productName\">\n                {options.map(option => {\n                    return (\n                        <option key={option.id} value={option.value}>{option.value}</option>\n                    );\n                })}\n            </datalist>\n            <label>weight (grams):</label>\n            <input\n                name=\"weight\"\n                value={this.state.weight}\n                onChange={this.handleChange} />\n            <label>protein/100g:</label>\n            <input\n                name=\"proteinPer100g\"\n                value={this.state.proteinPer100g}\n                onChange={this.handleChange} />\n            <label>fats/100g</label>\n            <input\n                name=\"fatsPer100g\"\n                value={this.state.fatsPer100g}\n                onChange={this.handleChange} />\n            <label>calories/100g</label>\n            <input\n                name=\"kcalPer100g\"\n                value={this.state.kcalPer100g}\n                onChange={this.handleChange} />\n            {this.state.foods.map(food => {\n                return (\n                    <div key={food.id}>\n                        <p>food: {food.name},\n                            protein: {Math.round(food.proteinTotal * 100) / 100}g, calories: {Math.round(food.kcalTotal * 100) / 100}kcal</p>\n                        <button\n                            onClick={() => this.removeObject(food.id)}\n                            type=\"button\">x</button>\n                        <hr />\n                    </div>\n                );\n            })}\n\n            <button\n                className=\"add-button\"\n                onClick={this.addObjectToArray}>\n                Add food\n            </button>\n\n        </>\n    }\n}\n\nexport default UserPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}